/*
    Beatmup image and signal processing library
    Copyright (C) 2020, lnstadrum

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
STRINGIFY(
    uniform sampler2D images[3];
    varying highp vec2 texCoord;
    uniform highp vec2 d1;

    lowp vec4 fetch(sampler2D image, highp float x, highp float y) {
        return texture2D(image, vec2(x, y));
    }

    void main() {
            
        highp float
            x0 = texCoord.x - d1.x,
            x1 = texCoord.x,
            x2 = texCoord.x + d1.x,

            y0 = texCoord.y - d1.y,
            y1 = texCoord.y,
            y2 = texCoord.y + d1.y;

        mediump vec4 sum = vec4(0.043561, 0.453397, -0.011995, -0.023606);
    
        sum += fetch(images[0], x0, y0) * mat4(-0.136656,0.024205,0.190901,-0.044603,0.133343,0.062253,-0.226218,-0.024568,0.036074,0.096808,0.127893,-0.109396,0.107270,-0.088325,-0.355499,-0.147316);
        sum += fetch(images[0], x1, y0) * mat4(0.213941,0.195588,-0.570525,-0.358364,-0.009052,-0.011991,0.389988,0.003019,0.006496,-0.184005,1.163286,-0.017590,-0.178670,0.246768,-4.910368,0.045413);
        sum += fetch(images[0], x2, y0) * mat4(0.174522,-0.031750,0.248982,-0.630570,-0.051978,-0.019495,-0.115716,0.086924,0.034342,0.015967,0.180673,-0.050366,0.060489,0.247801,-0.474481,0.151028);
        sum += fetch(images[0], x0, y1) * mat4(-0.480570,-0.199913,0.341750,0.003813,-0.039536,0.217686,-0.375445,-0.031517,-0.482144,0.005884,-0.476893,0.017923,0.221263,0.116273,-0.039609,-0.072694);
        sum += fetch(images[0], x1, y1) * mat4(-0.103580,0.361692,-0.420352,0.043486,0.115661,-0.475856,0.440298,-0.029556,0.208769,-0.844483,-2.616362,0.065277,-0.091682,-0.221236,0.662052,0.009340);
        sum += fetch(images[0], x2, y1) * mat4(0.145829,-0.007034,0.276489,0.109783,0.001350,-0.093278,-0.121674,-0.049687,0.069284,0.000546,-0.428783,0.095611,0.036749,-0.018664,0.234624,-0.021620);
        sum += fetch(images[0], x0, y2) * mat4(0.201229,-0.171801,0.122184,0.028767,-0.039905,0.159359,-0.247771,-0.032016,0.345844,0.069280,-0.397024,0.003814,-0.152493,0.062852,-0.047094,-0.050832);
        sum += fetch(images[0], x1, y2) * mat4(-0.070097,-0.009980,0.008257,0.016413,0.051046,0.061563,-0.193426,0.007836,-0.149013,0.790552,-0.441579,-0.052986,-0.038858,-0.123241,0.231473,0.030502);
        sum += fetch(images[0], x2, y2) * mat4(-0.010424,-0.139080,0.052108,-0.010578,-0.034416,0.028204,-0.083373,-0.032497,0.029381,0.396643,-0.550737,-0.144931,-0.011514,-0.041052,-0.037898,-0.004307);
        sum += fetch(images[1], x0, y0) * mat4(-0.156615,0.137730,0.030371,-0.009791,0.062012,-0.076492,-0.041300,-0.042599,-0.006232,0.002826,0.121952,0.044569,-0.046795,-0.149998,-0.188138,-0.067355);
        sum += fetch(images[1], x1, y0) * mat4(0.034608,-0.137926,0.005728,-0.161587,0.104813,0.052701,-0.073546,-0.050935,-0.027055,0.012988,0.148185,0.195444,-0.069125,-0.102889,-0.171661,-0.202793);
        sum += fetch(images[1], x2, y0) * mat4(-0.040065,0.050754,0.016782,0.165203,0.062917,-0.052918,-0.022407,-0.095897,-0.069155,0.031667,0.125656,0.232223,0.175483,-0.088798,-0.146515,-0.373473);
        sum += fetch(images[1], x0, y1) * mat4(-0.084753,0.051765,-0.061749,-0.059592,0.043579,0.050513,-0.014565,-0.073875,0.011114,0.088387,0.105444,0.010314,0.118603,0.044453,0.051171,-0.073071);
        sum += fetch(images[1], x1, y1) * mat4(0.618638,0.234070,0.211566,-0.166389,0.125314,-0.008238,-0.052246,0.058035,0.006341,-1.366341,-0.173027,-0.097438,0.398182,0.270702,0.347000,0.030383);
        sum += fetch(images[1], x2, y1) * mat4(-0.617816,-0.079282,-0.182330,0.214577,0.170813,0.004343,-0.021538,-0.169837,0.356994,-0.085166,0.157529,-1.156577,-0.183223,0.015153,-0.069503,0.194223);
        sum += fetch(images[1], x0, y2) * mat4(0.054621,-0.050491,0.102312,0.027914,-0.252366,-0.000796,-0.053451,-0.100796,-0.007061,-0.075419,-0.087720,-0.167280,0.011493,0.000783,0.196888,0.012126);
        sum += fetch(images[1], x1, y2) * mat4(1.145697,0.197573,0.195908,-0.074257,-0.378877,-0.070806,-0.067971,0.018755,-0.078416,0.255118,0.191385,0.011414,-0.391801,-0.080598,-0.069492,0.201562);
        sum += fetch(images[1], x2, y2) * mat4(-0.960710,-0.032433,0.062178,0.136767,0.072935,0.039817,-0.051137,-0.204247,-0.252959,-0.071068,-0.089071,-1.028242,0.039527,0.045392,0.135437,0.184982);
        sum += fetch(images[2], x0, y0) * mat4(-0.076155,0.062556,-0.540193,-0.195430,0.049984,0.088307,-0.529605,0.192280,0.101674,-0.121348,0.221606,0.139492,0.104866,0.251427,-3.183579,-0.019863);
        sum += fetch(images[2], x1, y0) * mat4(-0.349156,-0.432335,0.033183,0.175986,0.090019,-0.274042,0.266543,0.101890,0.102475,-0.387414,0.014983,0.234075,0.260861,-1.499404,0.498830,0.003939);
        sum += fetch(images[2], x2, y0) * mat4(0.345232,-0.101592,-0.328143,0.060317,-0.536533,0.177619,-0.019362,-0.008701,-0.401127,-0.180307,-0.042947,0.021492,0.090322,0.454855,0.004047,0.064455);
        sum += fetch(images[2], x0, y1) * mat4(-0.103172,-0.306720,0.665539,-0.023896,0.103884,0.189060,-0.278249,0.047273,0.098858,0.302351,-0.172952,-0.001803,0.219966,0.077584,0.048661,-0.023120);
        sum += fetch(images[2], x1, y1) * mat4(0.006483,0.001576,0.458717,0.214231,-0.023510,-0.095992,0.158224,0.104888,0.218113,-0.700490,0.339939,-0.232809,-0.127318,-0.337822,0.127833,0.059009);
        sum += fetch(images[2], x2, y1) * mat4(0.050359,-0.428237,0.503580,0.146029,-0.223018,0.116181,-0.156011,0.027686,-0.405479,-0.105363,-0.240024,0.023265,-0.648095,0.045785,0.306249,-0.008020);
        sum += fetch(images[2], x0, y2) * mat4(-0.057294,0.004216,0.132693,-0.130546,-0.026724,0.056857,0.122720,0.083177,-0.108066,0.530039,0.223326,0.001223,0.099612,-0.029590,0.440719,0.056988);
        sum += fetch(images[2], x1, y2) * mat4(0.026681,-0.185391,0.046850,0.076583,0.023349,0.152519,0.049046,0.028918,-0.258188,-0.303573,-0.284907,-0.181574,0.146546,-0.244570,0.225285,-0.031271);
        sum += fetch(images[2], x2, y2) * mat4(-0.020695,0.044390,0.055023,0.032536,-0.065491,-0.024146,0.035239,0.020821,0.095305,0.412437,-0.277214,-0.027776,0.042361,0.177262,0.017479,-0.012099);
        gl_FragColor = sum;
    
    }
    )
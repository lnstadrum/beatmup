/*
    Beatmup image and signal processing library
    Copyright (C) 2020, lnstadrum

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
STRINGIFY(
    uniform sampler2D images[3];
    varying highp vec2 texCoord;
    uniform highp vec2 d1;

    lowp vec4 fetch(sampler2D image, highp float x, highp float y) {
        return texture2D(image, vec2(x, y));
    }

    void main() {
            
        highp float
            x0 = texCoord.x - d1.x,
            x1 = texCoord.x,
            x2 = texCoord.x + d1.x,

            y0 = texCoord.y - d1.y,
            y1 = texCoord.y,
            y2 = texCoord.y + d1.y;

        mediump vec4 sum = vec4(0.196244, -0.004417, 0.062346, 0.210693);
    
        sum += fetch(images[0], x0, y0) * mat4(-0.065407,0.136853,0.625618,0.093521,-0.030017,-0.054475,-0.668210,-0.078488,0.009216,-0.014667,-0.502985,-0.095719,0.099244,-0.316198,-1.077767,-0.102092);
        sum += fetch(images[0], x1, y0) * mat4(-0.076324,-0.169887,-0.024059,0.077542,0.014069,0.167055,-0.441122,-0.110766,-0.109809,-0.075769,0.063096,-0.073724,0.035513,0.203281,-0.540756,-0.048664);
        sum += fetch(images[0], x2, y0) * mat4(-0.140622,-0.058409,-0.147275,0.054907,-0.068458,-0.052941,-0.191630,-0.097102,-0.041709,-0.081372,-0.515776,-0.116681,-0.020930,0.098986,-0.324232,-0.128418);
        sum += fetch(images[0], x0, y1) * mat4(-0.093913,-0.193771,0.523879,0.274799,-0.025265,-0.041707,0.210748,-0.129613,-0.085525,0.036297,0.009283,-0.129105,0.028567,0.065496,-0.463525,-0.041726);
        sum += fetch(images[0], x1, y1) * mat4(-0.265127,-0.296112,-1.190775,-0.176386,0.017877,-0.226937,0.456952,-0.140680,0.043968,-0.294568,-0.136915,-0.116012,0.016421,-0.152203,0.678362,-0.092492);
        sum += fetch(images[0], x2, y1) * mat4(-0.126303,-0.044643,-0.214477,-0.008683,0.061443,0.171233,-0.331161,-0.101330,0.021848,0.013882,0.111046,-0.068971,0.098682,-0.165143,-0.319203,-0.158557);
        sum += fetch(images[0], x0, y2) * mat4(0.028624,0.088213,-0.178612,-0.191286,-0.044684,0.096907,0.594328,-0.093180,-0.069265,0.052448,0.724839,-0.067070,0.019801,0.023808,1.224741,-0.308202);
        sum += fetch(images[0], x1, y2) * mat4(0.031300,0.027179,-0.479833,-0.321609,0.017044,0.031089,0.427184,0.026726,-0.004664,0.145643,0.361622,-0.044078,0.101318,0.050255,0.407817,0.146365);
        sum += fetch(images[0], x2, y2) * mat4(-0.083480,-0.040123,0.607562,-0.155546,-0.006366,-0.107833,-0.045904,-0.144438,0.044146,-0.143912,-0.203823,-0.156239,0.147339,-0.055217,-0.098739,-0.212879);
        sum += fetch(images[1], x0, y0) * mat4(0.152475,0.361961,0.064179,0.063889,-0.180585,-0.172352,0.068483,0.030300,-0.029137,-0.131842,0.087199,0.040245,-0.095477,-0.280276,0.023538,0.039391);
        sum += fetch(images[1], x1, y0) * mat4(-0.038869,-0.030799,-0.156180,0.225498,0.153566,-0.078186,0.008046,0.040591,0.043646,-0.099679,0.071082,0.296754,0.036392,-0.058626,-0.108604,0.084261);
        sum += fetch(images[1], x2, y0) * mat4(-0.124389,0.088793,-0.109016,-0.320889,0.001535,-0.202512,0.049888,-0.046081,0.008489,-0.154979,0.030720,-0.080138,0.057123,-0.229718,0.049197,-0.252778);
        sum += fetch(images[1], x0, y1) * mat4(0.213272,0.190464,-0.569793,0.189786,0.116341,-0.168620,0.019322,-0.054885,0.051806,-0.198612,-0.018330,-0.032871,0.022285,-0.289958,-0.185202,-0.284928);
        sum += fetch(images[1], x1, y1) * mat4(-0.132693,-0.019723,0.314208,0.107965,-0.103196,-0.123152,-0.193627,0.180696,0.003740,-0.019612,-0.058325,0.373102,0.056601,-0.214833,0.011626,-0.597447);
        sum += fetch(images[1], x2, y1) * mat4(-0.047919,0.036735,0.208029,-0.919601,-0.019399,-0.071875,0.096605,-0.035238,-0.016127,-0.054695,0.088343,-0.010966,-0.036546,-0.279789,0.075845,-0.396171);
        sum += fetch(images[1], x0, y2) * mat4(0.018226,0.039457,-0.696539,0.377599,0.041610,-0.183868,0.063138,-0.106048,-0.094266,-0.222528,0.001266,-0.202091,0.130506,-0.256962,-0.014771,-0.279743);
        sum += fetch(images[1], x1, y2) * mat4(-0.069104,-0.046697,0.186952,0.297031,-0.054719,-0.145362,0.201483,-0.121205,0.018960,-0.132308,-0.156180,0.558592,-0.162227,-0.219140,0.080385,-0.236660);
        sum += fetch(images[1], x2, y2) * mat4(-0.034214,0.021965,-0.169864,-1.482336,0.023113,-0.111490,-0.034210,0.115059,0.041966,-0.120095,0.006207,0.621501,-0.010219,-0.266743,-0.024571,-0.006327);
        sum += fetch(images[2], x0, y0) * mat4(0.006740,0.037568,0.378996,0.047897,-0.068989,0.238843,0.077266,0.124101,-0.329687,0.285750,0.149201,0.173408,-0.262223,0.314393,0.126331,0.156211);
        sum += fetch(images[2], x1, y0) * mat4(-0.015951,0.059972,-0.506034,0.037226,0.039918,0.118004,0.150632,0.153030,0.142300,0.084626,0.213808,0.087203,0.227842,0.071361,0.081641,0.199363);
        sum += fetch(images[2], x2, y0) * mat4(0.017420,-0.127009,-0.576800,0.118505,-0.040033,0.157748,0.139072,-0.037707,-0.078269,0.174149,0.144150,0.021425,0.049935,0.221772,0.148786,0.014060);
        sum += fetch(images[2], x0, y1) * mat4(0.149070,0.130276,0.374567,0.043369,-0.139993,0.122900,0.065734,0.021973,-0.472894,0.134740,0.038873,0.084527,0.552258,0.184211,0.003924,0.189819);
        sum += fetch(images[2], x1, y1) * mat4(0.643488,0.064039,0.168198,0.237093,-0.039842,0.109878,0.026296,0.129299,-0.073831,0.068784,0.078571,0.048278,0.238983,0.071941,-0.029280,0.270645);
        sum += fetch(images[2], x2, y1) * mat4(-0.323573,0.093491,-0.048136,-0.797876,0.063245,0.048638,0.158671,-0.163445,-0.012294,0.056099,0.106942,0.087888,-0.070242,0.165366,0.142764,0.108818);
        sum += fetch(images[2], x0, y2) * mat4(-0.124663,0.125342,0.167488,0.171900,0.234593,0.129747,0.031853,-0.125521,-0.461008,0.119139,0.078260,-0.062389,-0.327843,0.170332,-0.116051,-0.112914);
        sum += fetch(images[2], x1, y2) * mat4(-0.163307,-0.036662,-0.183232,-0.004447,-0.028423,0.066744,0.051972,-0.056919,-0.721182,0.124909,0.125891,-0.280604,-0.506870,0.022945,0.079827,0.036326);
        sum += fetch(images[2], x2, y2) * mat4(-0.138519,0.175223,-0.051514,-0.212442,-0.129699,0.123566,0.108088,0.201636,0.045236,0.125728,0.131077,0.292578,-0.290458,0.143662,0.087595,0.015307);
        gl_FragColor = sum;
    
    }
    )
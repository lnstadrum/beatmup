/*
    Beatmup image and signal processing library
    Copyright (C) 2020, lnstadrum

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
STRINGIFY(
    uniform sampler2D images[3];
    varying highp vec2 texCoord;
    uniform highp vec2 d1;

    lowp vec4 fetch(sampler2D image, highp float x, highp float y) {
        return texture2D(image, vec2(x, y));
    }

    void main() {
            
        highp float
            x0 = texCoord.x - d1.x,
            x1 = texCoord.x,
            x2 = texCoord.x + d1.x,

            y0 = texCoord.y - d1.y,
            y1 = texCoord.y,
            y2 = texCoord.y + d1.y;

        mediump vec4 sum = vec4(-0.001787, -1.631857, 0.001839, -0.145884);
    
        sum += fetch(images[0], x0, y0) * mat4(0.022103,0.006185,-0.013747,0.033513,-0.455075,-0.312960,0.344244,-0.786658,0.289927,0.152770,-0.370019,-0.078073,0.287015,-0.025133,-0.222779,-0.019618);
        sum += fetch(images[0], x1, y0) * mat4(0.082610,0.024055,-0.009168,0.021802,-0.794572,-0.587673,0.999626,-0.307345,0.662918,0.574445,-0.432675,-0.058937,1.215070,0.104305,-0.033080,0.277091);
        sum += fetch(images[0], x2, y0) * mat4(-0.006958,-0.007587,0.004300,0.009476,-0.416207,0.053640,-0.318513,-0.996960,0.397725,-0.212866,0.392945,-0.031735,0.257564,-0.033781,0.099618,0.045767);
        sum += fetch(images[0], x0, y1) * mat4(0.163440,-0.063671,0.020729,0.021342,-0.656360,0.006136,0.105371,-0.299311,0.625436,-0.318150,-0.045326,-0.885546,-0.201537,-0.185726,0.494729,-0.243585);
        sum += fetch(images[0], x1, y1) * mat4(0.112237,0.102528,-0.069617,-0.116817,1.099781,-2.815953,-1.415465,-1.139701,0.626439,0.310302,-1.143503,0.025105,-0.784690,-0.542247,1.112435,0.126108);
        sum += fetch(images[0], x2, y1) * mat4(-0.003155,-0.032416,0.010291,0.035596,-0.600765,-0.233971,-0.153363,-0.207162,0.659606,0.233885,-0.321572,-0.584508,-0.091132,0.124211,0.370977,-0.327254);
        sum += fetch(images[0], x0, y2) * mat4(0.024822,-0.005831,-0.004334,0.018215,-0.406780,0.152997,0.556092,-0.767033,0.502326,-0.054610,-0.607127,0.345659,-0.043195,-0.275050,0.298546,-0.150498);
        sum += fetch(images[0], x1, y2) * mat4(0.078862,-0.019738,0.028520,0.014951,-0.704846,0.551221,0.176480,-0.111745,0.606475,-0.263124,0.352454,-0.049562,-1.968547,0.519382,-0.247623,-0.369210);
        sum += fetch(images[0], x2, y2) * mat4(-0.001671,-0.010996,-0.016087,-0.013984,-0.360909,0.516112,-0.766663,-0.908942,0.340368,-0.452719,0.449560,0.424079,-0.061064,0.011620,-0.358897,-0.115086);
        sum += fetch(images[1], x0, y0) * mat4(-0.010597,0.003060,-0.003411,0.011847,0.347654,-0.688249,-0.307770,-0.110482,-0.451252,-0.040414,0.386703,-0.190575,-0.269684,0.255937,0.021081,-0.215296);
        sum += fetch(images[1], x1, y0) * mat4(-0.002238,-0.005117,0.005766,-0.006209,0.069466,-0.805198,-0.376285,-0.647337,-0.141125,0.077909,0.280249,0.346754,-0.122916,0.357813,0.091870,-0.190199);
        sum += fetch(images[1], x2, y0) * mat4(-0.003948,0.000645,-0.001762,-0.002780,0.420898,-0.704666,-0.452252,-0.014967,-0.402475,-0.103698,0.421412,-0.008092,-0.262531,0.241050,0.066453,-0.454631);
        sum += fetch(images[1], x0, y1) * mat4(-0.028296,-0.030263,0.017920,0.026762,0.372433,-0.357293,-0.482231,0.413903,-0.523608,-1.000112,0.344313,-0.140204,-0.056195,0.037876,-0.016685,-0.186531);
        sum += fetch(images[1], x1, y1) * mat4(0.021363,-0.003594,-0.004220,-0.052982,-0.005824,-0.043049,-0.738465,-0.529234,0.791340,-0.227094,0.055711,0.454847,-0.281468,0.398771,-0.168935,-0.104714);
        sum += fetch(images[1], x2, y1) * mat4(0.011350,0.013286,-0.009951,0.020804,0.564908,-0.935621,-0.544477,0.498363,-0.411895,-0.277967,0.614222,-0.743859,-0.195816,0.143476,0.000522,-0.068821);
        sum += fetch(images[1], x0, y2) * mat4(-0.011737,-0.012808,-0.000766,0.016909,0.545221,-0.364319,-0.280633,-1.015837,-0.570591,-0.379193,0.321171,-0.079770,-0.103373,0.388025,-0.079586,-0.250500);
        sum += fetch(images[1], x1, y2) * mat4(-0.014635,-0.004720,0.002223,-0.033203,0.138351,-0.626782,-0.281613,-0.570029,-0.249748,-0.899883,0.281783,-0.135376,-0.140706,-0.277112,-0.047077,-0.412648);
        sum += fetch(images[1], x2, y2) * mat4(-0.002501,0.000760,-0.003880,0.009762,0.415341,0.045509,-0.339575,-0.109761,-0.511253,-0.574210,0.382713,-0.147214,-0.053577,0.128751,-0.156688,-0.008596);
        sum += fetch(images[2], x0, y0) * mat4(0.009886,-0.011740,-0.002816,0.015019,-0.019187,0.352395,0.714150,0.078341,-0.118016,-0.162430,-0.515202,-0.268666,0.101091,-0.019654,0.004124,0.140452);
        sum += fetch(images[2], x1, y0) * mat4(-0.011505,0.002192,-0.023103,0.039678,-0.689487,0.668986,-1.293609,-0.325427,-0.217707,-0.745210,-0.313092,0.183576,0.137774,-0.368331,-0.152271,-0.429389);
        sum += fetch(images[2], x2, y0) * mat4(-0.001211,0.008954,0.015833,-0.003828,0.031543,-0.128020,0.210631,0.105078,-0.081914,-0.130697,-0.312470,-0.038429,-0.208380,0.034458,0.035638,0.152321);
        sum += fetch(images[2], x0, y1) * mat4(0.080802,0.001634,-0.020547,0.054696,-0.304470,-0.691827,0.396198,0.102368,0.432922,0.002699,-0.297940,-0.102854,-0.163094,0.634526,-0.007032,0.066479);
        sum += fetch(images[2], x1, y1) * mat4(-0.167106,-0.019339,0.036052,0.724240,-1.449202,-0.838388,-1.094259,2.658470,0.328854,-0.018653,-0.142716,-10.866259,-0.394008,0.878369,0.184898,-0.205512);
        sum += fetch(images[2], x2, y1) * mat4(0.022182,0.005645,-0.015520,0.039655,0.354596,-0.242731,-0.249333,0.137924,-0.191675,0.454394,0.409164,-0.106524,-0.543893,0.158697,-0.205993,-0.167306);
        sum += fetch(images[2], x0, y2) * mat4(0.004520,0.013730,-0.006397,0.022405,-0.213952,-0.913279,0.006708,0.107941,0.017771,1.108734,0.277613,-0.133116,-0.647548,-0.809719,-0.011624,-0.082519);
        sum += fetch(images[2], x1, y2) * mat4(-0.038249,-0.005642,-0.011084,0.074432,-0.941741,-0.775895,-0.091562,-0.388311,-0.599360,0.411140,-0.263865,0.245313,0.077948,0.264976,-0.359187,0.440421);
        sum += fetch(images[2], x2, y2) * mat4(0.008717,0.007825,0.000702,0.020414,0.586195,0.398244,-0.183908,0.093256,-0.237092,-0.405363,-0.008131,-0.099774,0.046379,0.211037,0.115421,0.092018);
        gl_FragColor = sum;
    
    }
    )
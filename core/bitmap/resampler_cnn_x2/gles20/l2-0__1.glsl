/*
    Beatmup image and signal processing library
    Copyright (C) 2020, lnstadrum

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
STRINGIFY(
    uniform sampler2D images[3];
    varying highp vec2 texCoord;
    uniform highp vec2 d1;

    lowp vec4 fetch(sampler2D image, highp float x, highp float y) {
        return texture2D(image, vec2(x, y));
    }

    void main() {
            
        highp float
            x0 = texCoord.x - d1.x,
            x1 = texCoord.x,
            x2 = texCoord.x + d1.x,

            y0 = texCoord.y - d1.y,
            y1 = texCoord.y,
            y2 = texCoord.y + d1.y;

        mediump vec4 sum = vec4(0.126172, -0.528314, 0.045595, -0.083336);
    
        sum += fetch(images[0], x0, y0) * mat4(0.270469,-0.394212,0.108427,-0.150624,-3.357023,0.752302,-0.127215,-0.351519,-0.645177,0.485692,-0.246650,0.387124,0.422986,0.006977,-0.001091,-0.008676);
        sum += fetch(images[0], x1, y0) * mat4(-0.244824,-0.056092,-0.840675,0.254764,0.979943,-4.695831,0.431985,0.313803,0.070857,0.480191,-0.501392,0.448387,-0.122902,0.497079,-0.083610,-0.005735);
        sum += fetch(images[0], x2, y0) * mat4(0.056235,0.329714,0.083756,0.733068,-0.307743,1.466611,0.188444,-0.857400,-0.137978,-0.324996,-0.253634,-0.068775,-0.018790,-0.065835,-0.013704,0.017281);
        sum += fetch(images[0], x0, y1) * mat4(-0.990827,-0.055891,-0.080796,-0.069911,0.297315,1.240437,-0.393784,-1.271335,-0.415190,-0.573535,0.128458,-0.129924,-0.166885,-0.095056,-0.037398,-0.041597);
        sum += fetch(images[0], x1, y1) * mat4(-0.331326,0.141344,0.482950,-0.476123,0.999301,-1.541164,-3.466187,-0.793110,-0.168318,-0.001811,0.631114,0.094568,-0.065075,0.002379,0.112813,-0.005215);
        sum += fetch(images[0], x2, y1) * mat4(0.227962,0.614472,-0.081668,0.129453,-0.632507,-0.274891,-0.584541,-2.277266,0.107369,0.366636,0.030927,0.243060,-0.024121,-0.006645,-0.041728,0.022110);
        sum += fetch(images[0], x0, y2) * mat4(0.440361,-0.132186,-0.387132,-0.068179,0.447184,-0.416382,-0.769565,-2.716808,0.266984,0.072079,-0.092276,0.737961,0.029413,-0.018002,-0.009737,-0.023307);
        sum += fetch(images[0], x1, y2) * mat4(0.178608,-0.344294,-0.219143,0.250989,-0.294250,1.443869,1.590911,-3.013300,0.338756,0.047121,-0.210490,0.992814,0.066482,-0.033954,0.006847,-0.033334);
        sum += fetch(images[0], x2, y2) * mat4(-0.237248,-0.350259,-0.346967,0.114980,0.318960,1.079819,-0.560131,-0.759488,-0.035461,-0.110548,0.082557,0.251819,-0.030345,-0.049484,0.012830,-0.011076);
        sum += fetch(images[1], x0, y0) * mat4(0.294946,-0.298098,0.025765,0.141107,-0.839270,0.449133,1.449859,-0.396046,0.071269,-0.041342,-0.119897,0.032005,0.088878,-0.063056,0.025151,0.008575);
        sum += fetch(images[1], x1, y0) * mat4(-0.436197,0.544764,-0.137079,-0.153176,0.744138,-1.049597,0.553062,-0.813632,-0.202078,-0.079008,0.149885,-0.145913,0.037721,0.371818,-0.005777,0.005247);
        sum += fetch(images[1], x2, y0) * mat4(-0.011406,0.363660,0.144132,-0.077602,0.476223,-1.298252,0.913510,0.215714,0.006638,0.750558,0.134081,-0.052550,0.017140,0.200857,-0.001046,0.017643);
        sum += fetch(images[1], x0, y1) * mat4(-0.432578,0.266109,0.226408,0.315640,0.087484,-0.158950,0.879801,0.130756,-0.230347,0.278725,0.206325,-0.054727,-0.015742,0.006623,0.044479,0.014630);
        sum += fetch(images[1], x1, y1) * mat4(-0.253570,0.085737,1.459591,-0.259476,-2.311710,-0.924335,0.161496,0.101140,0.037669,0.252178,-1.170551,0.168732,0.096135,0.331886,-0.198957,0.008717);
        sum += fetch(images[1], x2, y1) * mat4(0.025914,-0.367062,0.012852,0.258104,-1.553443,-1.251168,-0.012100,0.519985,-0.007794,-0.249777,-0.027445,-0.091911,-0.014573,0.342897,-0.033745,0.026681);
        sum += fetch(images[1], x0, y2) * mat4(0.656970,-0.109823,-0.075856,-0.035008,-0.184942,0.341584,1.036353,1.877892,-0.365619,-0.193365,-0.359476,-0.118413,0.031561,-0.024304,0.015840,-0.006616);
        sum += fetch(images[1], x1, y2) * mat4(0.135915,-0.128224,-0.320800,0.343159,1.135564,0.016057,0.097912,0.072797,0.000452,-0.240060,-0.573171,-0.111073,0.025429,-0.027938,0.007246,-0.026259);
        sum += fetch(images[1], x2, y2) * mat4(-0.081830,0.212571,-0.082997,0.385700,0.593723,-0.537646,0.583766,-0.437380,0.010986,-0.207334,-0.112935,0.505964,0.000586,-0.115404,0.004344,0.000977);
        sum += fetch(images[2], x0, y0) * mat4(0.121140,-0.017065,-0.105242,0.053662,-3.689020,0.665802,-1.511942,-0.613220,0.401940,-0.000146,0.066335,0.030790,0.003934,0.011766,-0.000367,-0.002477);
        sum += fetch(images[2], x1, y0) * mat4(0.697148,0.022564,-0.157185,-0.061208,-0.604623,1.096182,0.133423,0.361837,-0.053369,-0.106911,0.139745,-0.060554,0.006849,0.007027,-0.002898,-0.019231);
        sum += fetch(images[2], x2, y0) * mat4(-0.004412,-0.028273,-0.137412,0.124549,-2.441013,0.852109,-0.026215,0.330017,0.097991,-0.179727,0.186797,0.205805,0.036731,0.008374,-0.001480,-0.016304);
        sum += fetch(images[2], x0, y1) * mat4(0.647653,-0.124673,-0.085031,-0.177097,-1.696903,0.270568,-0.776274,-0.531415,0.382396,0.018794,0.078322,0.174493,-0.010748,-0.003833,-0.009915,0.005713);
        sum += fetch(images[2], x1, y1) * mat4(-0.117798,0.066498,0.166798,-0.240448,-2.549007,-0.306180,-0.190423,-1.303405,-0.755031,-0.112797,-0.174888,0.081320,-0.066209,-0.013157,-0.005240,0.028369);
        sum += fetch(images[2], x2, y1) * mat4(0.224572,-0.314355,0.020028,-0.421457,-2.529965,-0.454377,-0.531019,0.056699,-1.119891,-0.064826,-0.114915,0.046655,-0.008995,-0.005600,0.000411,0.034690);
        sum += fetch(images[2], x0, y2) * mat4(0.180651,-0.127915,-0.164348,0.063538,-2.558090,0.906809,-3.133132,-0.491641,0.320351,-0.095686,-0.057945,0.216403,-0.035566,-0.003285,-0.044935,0.018899);
        sum += fetch(images[2], x1, y2) * mat4(0.451285,-0.532188,0.156623,0.216445,-0.429518,-0.384498,-0.009741,0.251524,0.129192,0.489978,-0.619358,-0.261549,-0.014675,0.043828,0.093647,0.005179);
        sum += fetch(images[2], x2, y2) * mat4(0.263678,-0.524627,0.257804,-0.660470,-2.740082,0.012336,1.215935,1.025620,0.276841,0.416329,-0.047780,-0.009483,0.030108,-0.068600,0.023727,-0.032128);
        gl_FragColor = sum;
    
    }
    )
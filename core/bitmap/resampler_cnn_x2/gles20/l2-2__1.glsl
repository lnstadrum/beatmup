/*
    Beatmup image and signal processing library
    Copyright (C) 2020, lnstadrum

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
STRINGIFY(
    uniform sampler2D images[3];
    varying highp vec2 texCoord;
    uniform highp vec2 d1;

    lowp vec4 fetch(sampler2D image, highp float x, highp float y) {
        return texture2D(image, vec2(x, y));
    }

    void main() {
            
        highp float
            x0 = texCoord.x - d1.x,
            x1 = texCoord.x,
            x2 = texCoord.x + d1.x,

            y0 = texCoord.y - d1.y,
            y1 = texCoord.y,
            y2 = texCoord.y + d1.y;

        mediump vec4 sum = vec4(-0.015146, -0.281039, -1.355199, 0.204492);
    
        sum += fetch(images[0], x0, y0) * mat4(0.033974,0.245190,-0.404444,-0.091369,0.054711,0.043510,-0.077761,0.616971,-0.978461,-0.032706,0.349980,-0.189967,-0.093028,-0.016061,-0.052495,-2.378446);
        sum += fetch(images[0], x1, y0) * mat4(-0.026238,-0.019629,-0.127663,0.064189,0.525242,0.016768,0.053551,-0.043961,0.309931,0.311408,-0.192974,0.359289,0.097675,-0.051089,0.076263,0.287388);
        sum += fetch(images[0], x2, y0) * mat4(-0.012283,-0.038981,-0.071269,-1.514324,-0.529440,0.065482,-0.228975,0.014274,0.091740,0.233134,0.701998,0.858188,-0.047975,0.019821,0.110628,-0.157015);
        sum += fetch(images[0], x0, y1) * mat4(-0.313354,0.028401,-0.139813,-0.422107,0.385830,-0.113647,0.252933,0.471015,-0.962445,0.138210,-0.587234,1.637120,0.088953,-0.038336,-0.043657,-0.191940);
        sum += fetch(images[0], x1, y1) * mat4(0.336815,-0.446986,0.049042,-0.204799,-3.376965,-0.175609,0.063242,0.620370,2.309314,-0.998005,-0.846595,-0.227209,-0.226529,-0.003097,-0.121300,0.710270);
        sum += fetch(images[0], x2, y1) * mat4(-0.171216,-0.259049,-0.250945,-0.939014,0.641106,-0.050176,-0.112834,0.414535,-0.688208,0.357358,0.754829,2.143032,-0.011661,0.068062,0.033361,0.256827);
        sum += fetch(images[0], x0, y2) * mat4(0.065492,0.063213,-0.070009,0.027404,-0.022177,-0.821087,0.111993,-0.014657,0.307839,-0.427832,-0.333870,0.643981,0.023787,-0.051944,0.000729,-0.447347);
        sum += fetch(images[0], x1, y2) * mat4(-0.141317,-0.521485,-0.133969,-0.537165,0.130848,-0.288666,0.417496,0.584055,0.424700,-2.115789,0.567501,1.285378,0.008663,0.001516,-0.012036,-1.164026);
        sum += fetch(images[0], x2, y2) * mat4(-0.042628,-0.137238,-0.018379,0.023902,-0.156996,-0.147314,0.005456,-0.294365,-0.272821,0.422789,-0.626043,0.977704,-0.075567,0.044575,-0.068855,0.155902);
        sum += fetch(images[1], x0, y0) * mat4(0.093885,-0.025083,0.224515,0.308183,0.098904,-0.083911,-0.179854,0.109231,0.083095,-0.465171,-0.122328,-0.169659,-0.025328,0.060225,-2.579127,0.088383);
        sum += fetch(images[1], x1, y0) * mat4(-0.005233,-0.497392,-0.593733,-0.339171,0.072433,-0.557256,-0.477195,0.212096,0.091750,-2.737981,3.643892,0.541891,-0.056084,0.012654,-0.720513,0.082514);
        sum += fetch(images[1], x2, y0) * mat4(0.209813,-0.172570,-0.379721,0.405456,0.031096,0.000570,0.906523,0.123219,-0.257958,-0.195259,0.504556,0.498993,-0.123652,0.096900,0.005773,0.231996);
        sum += fetch(images[1], x0, y1) * mat4(0.186351,0.028711,-0.427810,-0.528815,0.060663,-0.014395,0.383787,-0.151619,-0.158636,-0.204923,0.539956,0.027310,-0.094577,-0.043024,-0.418174,-0.394765);
        sum += fetch(images[1], x1, y1) * mat4(0.225567,-0.117994,0.503988,0.512397,0.024829,0.405483,0.269000,-0.358385,-0.058623,0.683059,0.219042,0.317174,-0.037274,0.060620,-0.658026,0.050342);
        sum += fetch(images[1], x2, y1) * mat4(0.000670,0.196393,0.660099,-0.484576,0.213829,0.294862,-1.033594,0.386309,0.263677,0.119769,0.289741,0.256094,0.051773,0.000310,0.034676,-0.363589);
        sum += fetch(images[1], x0, y2) * mat4(-0.011165,0.075944,-0.009272,0.204561,-0.137273,0.004816,-0.118825,-0.196990,0.231127,-0.462172,0.524401,0.161670,0.003615,-0.124477,-1.110507,0.022343);
        sum += fetch(images[1], x1, y2) * mat4(0.111045,0.245668,-0.383383,-0.246200,0.353263,0.014411,-0.132673,0.098617,-0.306048,0.486331,0.462698,-0.062505,0.260519,0.006788,-0.962626,-0.290436);
        sum += fetch(images[1], x2, y2) * mat4(-0.362642,0.047841,0.021136,0.226307,-0.349821,0.106557,0.104419,0.204334,-1.518130,-0.617286,-0.300019,0.281653,-0.271250,-0.204238,-1.318795,0.028482);
        sum += fetch(images[2], x0, y0) * mat4(0.291669,0.019684,0.183924,-0.651381,0.145451,0.127968,0.042671,-0.580683,0.169408,0.227782,-0.026941,-0.702065,0.058688,0.003020,-0.055082,0.108051);
        sum += fetch(images[2], x1, y0) * mat4(-0.235252,0.344692,0.033556,0.195459,0.110724,0.052639,0.097149,-0.196819,0.417764,0.043582,0.421824,0.038123,-0.509562,0.026964,0.074449,-0.293807);
        sum += fetch(images[2], x2, y0) * mat4(-0.044602,0.057731,0.233951,-0.045753,0.313471,-0.005683,0.103050,0.117446,0.315079,0.449748,-0.112028,-0.213138,-0.557436,0.071890,-0.010701,-0.081537);
        sum += fetch(images[2], x0, y1) * mat4(-0.116595,-0.015294,0.108833,0.200384,0.268524,-0.033830,-0.112181,0.349587,-0.347605,0.238696,-0.581730,-0.979097,0.325813,-0.034075,0.175124,-0.225978);
        sum += fetch(images[2], x1, y1) * mat4(0.278472,0.077483,-0.138303,-0.407800,-0.002115,0.034196,0.057253,-0.458893,0.142888,0.156151,0.726974,0.387326,-0.400246,-0.022838,0.174485,-0.348892);
        sum += fetch(images[2], x2, y1) * mat4(-0.559376,0.097947,0.064373,0.764919,-0.482138,-0.028391,0.187244,-0.015198,-0.141799,0.192517,-0.458444,-0.059600,1.470899,0.076968,-0.033350,-0.259984);
        sum += fetch(images[2], x0, y2) * mat4(0.171447,0.044795,0.075997,-0.538543,0.181310,-0.044436,0.097428,-0.582650,0.153802,-0.254893,-0.199618,-0.815049,0.073156,-0.004209,0.084033,-0.131308);
        sum += fetch(images[2], x1, y2) * mat4(-0.030942,0.042143,0.158506,-0.151996,0.240200,-0.534690,0.170336,-0.319163,0.360897,0.333875,0.433466,-0.116325,-0.326567,-0.344375,0.010590,-0.445494);
        sum += fetch(images[2], x2, y2) * mat4(0.361482,0.127710,-0.001661,-0.015898,-0.214482,0.287105,0.373876,-0.062658,0.278547,-0.771508,-0.168567,-0.233364,-0.220849,0.097423,0.005655,-0.069675);
        gl_FragColor = sum;
    
    }
    )
/*
    Beatmup image and signal processing library
    Copyright (C) 2020, lnstadrum

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
STRINGIFY(
    uniform sampler2D images[3];
    varying highp vec2 texCoord;
    uniform highp vec2 d1;

    lowp vec4 fetch(sampler2D image, highp float x, highp float y) {
        return texture2D(image, vec2(x, y));
    }

    void main() {
            
        highp float
            x0 = texCoord.x - d1.x,
            x1 = texCoord.x,
            x2 = texCoord.x + d1.x,

            y0 = texCoord.y - d1.y,
            y1 = texCoord.y,
            y2 = texCoord.y + d1.y;

        mediump vec4 sum = vec4(0.156778, 0.147487, -2.391777, -0.039113);
    
        sum += fetch(images[0], x0, y0) * mat4(-0.127586,0.041531,0.383832,0.122114,-0.142732,0.054397,0.301348,0.088676,0.120314,0.551824,-0.264667,-0.242573,-0.054053,-0.054774,0.282277,0.100423);
        sum += fetch(images[0], x1, y0) * mat4(0.084330,0.271290,-0.021671,0.133224,-0.061032,-0.048037,0.349331,0.047642,0.071460,1.394384,-0.054779,-0.104771,0.060233,0.260515,0.274759,0.090396);
        sum += fetch(images[0], x2, y0) * mat4(0.024236,-0.239000,0.216838,0.142979,-0.136473,-0.072457,0.125711,0.069747,0.109359,0.115900,-0.291848,0.014841,-0.058623,-0.076041,0.321393,0.057819);
        sum += fetch(images[0], x0, y1) * mat4(-0.009610,-0.067360,-0.408004,0.265029,-0.156693,-0.038702,-0.101541,0.148132,0.066362,0.542450,-0.233371,0.293535,0.019414,0.098719,-0.348872,0.159388);
        sum += fetch(images[0], x1, y1) * mat4(0.096540,-0.143089,0.581511,0.202832,-0.061047,0.103571,0.098084,0.117071,0.229084,-1.655735,0.366848,-0.077109,-0.011424,-0.128926,0.369284,0.093373);
        sum += fetch(images[0], x2, y1) * mat4(0.041347,0.039950,-0.101150,0.093247,-0.163310,-0.092016,-0.680130,0.056748,0.138966,0.127816,-0.092012,-0.084311,-0.085313,-0.094751,-0.179887,0.050516);
        sum += fetch(images[0], x0, y2) * mat4(0.027218,-0.021265,-1.341285,0.202053,-0.171664,-0.062490,-0.413504,0.172339,0.109473,0.303940,-0.323349,0.207176,-0.025191,-0.023599,-0.225066,0.012649);
        sum += fetch(images[0], x1, y2) * mat4(0.024288,-0.047611,0.122588,0.063399,-0.170103,-0.133441,-0.169034,0.013176,-0.190521,0.929980,0.513895,0.461827,-0.011041,-0.059206,-0.518741,0.045646);
        sum += fetch(images[0], x2, y2) * mat4(-0.081200,0.071432,0.181627,0.131803,-0.221975,0.105561,0.118687,0.126127,0.157533,0.454577,-0.088887,-0.040487,-0.111838,0.121039,0.210293,0.076743);
        sum += fetch(images[1], x0, y0) * mat4(-0.044612,0.297931,-0.198033,-0.137740,0.057007,0.298235,-0.046780,-0.025632,-0.567364,0.265325,-0.893097,-0.428271,-0.072772,0.258586,-0.044753,-0.073020);
        sum += fetch(images[1], x1, y0) * mat4(-0.002108,0.162114,-0.106002,-0.066546,-0.023404,0.145597,-0.055465,0.116237,0.114936,-0.264553,-0.114537,0.042528,0.019631,0.152739,-0.105407,-0.152209);
        sum += fetch(images[1], x2, y0) * mat4(0.019469,0.131408,-0.046719,-0.056340,0.006457,0.186653,-0.066096,0.127515,-0.724355,0.090708,0.103799,-0.081591,-0.012615,0.108231,0.021217,0.155563);
        sum += fetch(images[1], x0, y1) * mat4(0.136346,0.280064,0.247439,-0.107276,-0.026055,0.200466,0.021885,0.019467,4.142009,0.041591,-0.828780,-0.235553,0.001886,0.142697,-0.256764,-0.031993);
        sum += fetch(images[1], x1, y1) * mat4(-0.152562,0.052327,-0.041878,-0.118966,0.022429,0.092235,-0.023323,0.089538,-0.187658,0.172780,-0.146661,-0.429108,0.016290,0.076159,-0.165740,0.044838);
        sum += fetch(images[1], x2, y1) * mat4(0.016650,0.080949,-0.143665,-0.023743,0.024987,0.023060,-0.041903,0.178416,0.511497,0.220593,-0.026525,-0.247153,0.000721,0.051248,-0.047573,0.072607);
        sum += fetch(images[1], x0, y2) * mat4(-0.054675,0.178789,-0.179854,-0.039937,-0.056170,0.222413,0.171293,0.057368,-0.441126,-0.189511,0.402488,0.202264,0.103324,0.120938,0.244872,0.178664);
        sum += fetch(images[1], x1, y2) * mat4(0.107917,0.100425,0.188470,-0.136929,0.048634,0.140615,-0.008088,0.122456,0.042216,-0.105929,1.270252,-1.559588,-0.048796,0.161895,0.095108,0.628169);
        sum += fetch(images[1], x2, y2) * mat4(-0.001976,0.138601,-0.060327,0.117589,-0.022060,0.113829,-0.004702,0.084763,-0.577376,-0.017975,0.291572,-0.278470,0.022942,0.126782,0.024067,0.426212);
        sum += fetch(images[2], x0, y0) * mat4(-0.003780,-0.192246,-0.148982,-0.190151,-0.006510,0.012888,0.021483,-0.120912,-0.359507,0.013596,-0.056860,0.287411,0.166006,-0.156690,-0.110745,-0.170669);
        sum += fetch(images[2], x1, y0) * mat4(-0.043949,-0.155684,-0.365838,-0.079655,-0.141593,-0.095063,0.062082,-0.067889,-0.062058,-0.132863,-0.235198,-0.072707,-0.185678,-0.155170,-0.148573,-0.097106);
        sum += fetch(images[2], x2, y0) * mat4(-0.080160,-0.271148,-0.333823,-0.004768,-0.043605,-0.005719,-0.011405,-0.030253,-0.051990,0.308625,0.090325,0.232008,0.013141,-0.085533,-0.132483,-0.047995);
        sum += fetch(images[2], x0, y1) * mat4(-0.138888,-0.246573,-0.224144,-0.093253,-0.030014,-0.004184,0.001012,-0.023637,0.154777,0.219668,0.368143,0.046288,-0.154191,-0.097651,-0.029691,-0.099672);
        sum += fetch(images[2], x1, y1) * mat4(-0.434966,-0.109527,-0.340397,0.202993,-0.059235,-0.014032,-0.004494,-0.016013,0.255004,0.391818,-0.262769,-0.092467,-0.020373,-0.077523,-0.105452,0.302295);
        sum += fetch(images[2], x2, y1) * mat4(-0.167588,-0.163228,-0.310195,-0.066263,-0.044756,-0.090325,-0.014064,-0.018928,-0.038081,-0.014941,-0.086225,-0.160224,0.064354,-0.034024,-0.080065,-0.042370);
        sum += fetch(images[2], x0, y2) * mat4(-0.048686,-0.307699,-0.060012,0.347194,0.309075,0.051041,0.087163,0.047160,1.220934,-0.098128,-0.297600,0.182835,-0.447852,-0.047234,-0.002563,0.084291);
        sum += fetch(images[2], x1, y2) * mat4(0.388479,-0.106124,-0.194207,0.425201,0.143000,-0.083427,0.021777,0.145568,-0.096679,-0.247926,-0.187050,0.064636,-0.466177,-0.144220,-0.103923,0.252880);
        sum += fetch(images[2], x2, y2) * mat4(-0.089761,-0.023309,-0.135902,0.036119,-0.158523,0.030945,0.011165,-0.001197,-1.233034,0.265463,-0.181662,0.174329,0.011995,-0.023494,-0.079882,-0.200510);
        gl_FragColor = sum;
    
    }
    )
/*
    Beatmup image and signal processing library
    Copyright (C) 2020, lnstadrum

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
STRINGIFY(
    uniform sampler2D[3] inFeatures;
    layout(binding = 0, std430) writeonly buffer outFeatures_ { highp uint data[][4]; } outFeatures;
    void main() {
        lowp vec4 i0, i1, i2, i3, i4, i5, i6, i7, i8;
        mediump vec4 sum0 = vec4(0.966767, -0.184626, -0.000156, 1.183150);
        mediump vec4 sum1 = vec4(0.050992, -0.098173, -0.189357, -0.181490);
        i0 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, -1), 0);
        i1 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, -1), 0);
        i2 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, -1), 0);
        i3 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, 0), 0);
        i4 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, 0), 0);
        i5 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, 0), 0);
        i6 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, 1), 0);
        i7 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, 1), 0);
        i8 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, 1), 0);
        sum0 += i0 * mat4(-0.094106,0.263400,-0.234537,-0.569669,-0.088565,-0.011156,0.004856,0.107807,-0.049251,-0.174419,-0.230892,-0.245827,0.082392,0.000520,-0.026700,-0.096506);
        sum0 += i1 * mat4(0.038532,-0.450557,0.373591,1.131684,-0.102877,0.051732,0.052514,-0.151881,0.003585,-0.001440,-0.114406,-0.092042,0.051725,-0.272108,0.081684,-0.014345);
        sum0 += i2 * mat4(0.148117,-0.155814,-0.232094,-0.210939,-0.127935,0.014709,-0.046545,0.027483,-0.131582,-0.030435,-0.184111,-0.083534,0.060045,0.115543,-0.081575,0.155400);
        sum0 += i3 * mat4(0.147892,0.075644,-0.297392,-0.085672,0.041591,0.225617,-0.259904,-0.419782,-0.062078,0.191902,-0.139189,-0.097836,0.194480,0.036327,-0.145520,-0.304531);
        sum0 += i4 * mat4(-0.585503,-0.129758,0.323542,-0.596827,0.171032,-0.193938,0.205621,0.282281,-0.162404,0.093560,-0.208680,-0.842557,-0.323902,0.209960,0.248590,0.477106);
        sum0 += i5 * mat4(0.286943,-0.671453,0.152994,0.119026,-0.125056,0.002908,0.117522,-0.002562,-0.099635,-0.096279,-0.166596,0.044680,-0.114075,-0.264847,-0.199782,-0.220839);
        sum0 += i6 * mat4(-0.084246,-0.195283,-0.184857,-0.249262,-0.050461,-0.226234,-0.065964,0.043655,0.136962,-0.080336,-0.240491,-0.185906,0.086201,0.045197,-0.136755,0.116991);
        sum0 += i7 * mat4(-0.046818,0.622729,0.232271,0.708421,0.226756,0.274245,0.212590,0.164997,-0.016934,-0.201037,-0.091283,-0.258539,0.109080,-0.075755,-0.090322,0.014829);
        sum0 += i8 * mat4(0.132299,0.040097,-0.085806,0.308546,-0.148743,-0.009423,-0.041177,-0.228574,0.191122,-0.007064,-0.020897,-0.191805,0.152609,0.038661,-0.019172,-0.011089);
        sum1 += i0 * mat4(0.003571,0.021319,0.006621,-0.008918,-0.022004,-0.107210,-0.096004,-0.427823,-0.055104,0.217673,-0.107572,-0.223639,-0.123095,-0.080033,0.043446,0.073911);
        sum1 += i1 * mat4(0.028376,-0.000609,0.011655,0.012720,-0.007024,0.011489,0.040373,-0.407383,-0.008050,-0.172566,0.162567,0.051308,-0.096239,0.068568,0.024848,-0.001337);
        sum1 += i2 * mat4(0.005435,-0.006431,0.011073,-0.015259,-0.153709,0.056732,0.061797,-0.224087,-0.114514,0.041683,-0.066551,0.015296,-0.120605,0.102747,0.022027,-0.066238);
        sum1 += i3 * mat4(0.015617,-0.000220,-0.052605,-0.035172,0.030183,0.208655,0.306612,-0.145090,0.051327,-0.126483,-0.279167,-0.099265,-0.105198,-0.071506,0.063189,0.266724);
        sum1 += i4 * mat4(0.239669,0.015896,-0.014178,-0.009279,-0.836012,-0.232837,0.007916,-0.068462,0.391108,0.198739,0.179473,0.241891,0.155606,0.330248,-0.175353,-0.222438);
        sum1 += i5 * mat4(0.035994,-0.021156,0.031475,0.020828,-0.059061,-0.323246,-0.114695,-0.293737,-0.200202,-0.012257,0.098989,-0.061582,0.053341,-0.142736,0.206062,-0.052434);
        sum1 += i6 * mat4(-0.001908,-0.004665,0.010989,0.004075,0.162955,-0.248283,-0.301660,-0.203675,-0.088077,-0.072900,0.055812,0.012231,-0.134025,-0.018259,0.186127,-0.038368);
        sum1 += i7 * mat4(0.044461,-0.014544,-0.004199,0.009043,0.461278,-0.229933,-0.125989,-0.131500,-0.132100,0.083700,0.111318,0.050192,0.147578,-0.175282,-0.069054,-0.218641);
        sum1 += i8 * mat4(-0.008019,0.011240,0.016420,0.014532,0.156002,0.448721,0.104686,-0.297050,-0.083757,-0.026232,-0.033591,-0.171637,-0.017835,0.153285,0.108194,0.146094);
        i0 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, -1), 0);
        i1 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, -1), 0);
        i2 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, -1), 0);
        i3 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, 0), 0);
        i4 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, 0), 0);
        i5 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, 0), 0);
        i6 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, 1), 0);
        i7 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, 1), 0);
        i8 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, 1), 0);
        sum0 += i0 * mat4(-0.372659,0.060935,-0.038669,-0.171621,0.040843,-0.148038,0.120622,0.105591,-0.057250,-0.048952,0.146995,0.088077,-0.195295,0.036419,-0.132160,-0.174692);
        sum0 += i1 * mat4(-0.040810,-0.206925,-0.221130,0.128790,0.097186,-0.205967,0.025576,0.271124,0.089681,0.019952,-0.175131,-0.157916,-0.125495,0.004099,0.362094,0.506508);
        sum0 += i2 * mat4(0.250063,0.088849,0.053054,-0.277801,-0.016894,0.010377,0.103153,0.133939,-0.183786,0.002679,0.178222,0.109599,-0.235950,0.000755,0.136394,-0.002282);
        sum0 += i3 * mat4(-0.610704,0.758942,0.160460,0.866151,0.092779,-0.017017,-0.082695,-0.373006,0.124205,0.001612,-0.127008,-0.133984,-0.119626,0.280619,-0.058391,-0.365521);
        sum0 += i4 * mat4(0.168785,-1.177520,-0.063923,-2.325581,0.441601,0.313931,-0.496419,-2.451339,0.057192,-0.107030,0.257496,3.130628,0.028547,-0.303182,-0.259625,-0.364667);
        sum0 += i5 * mat4(-0.066103,0.320623,-0.007815,-1.394562,0.065516,-0.200996,0.093170,0.208273,0.060236,-0.025613,-0.169379,-0.170386,-0.114175,0.184144,-0.107736,0.359538);
        sum0 += i6 * mat4(-0.247331,0.086870,0.243077,-0.040351,0.234445,-0.096135,0.211721,-0.100047,-0.106270,-0.191004,-0.019036,-0.187341,-0.329919,0.058051,-0.080651,-0.148146);
        sum0 += i7 * mat4(-0.021447,-0.205979,0.152906,0.400169,0.354297,-0.251671,0.200182,-0.477128,0.078509,0.068970,-0.142985,0.152513,-0.284869,0.266244,0.019778,-0.291220);
        sum0 += i8 * mat4(0.119237,0.126469,-0.458710,-0.410322,0.031796,-0.034691,0.055054,0.128044,-0.041015,-0.098157,-0.127495,-0.117634,-0.276315,0.093307,-0.126157,-0.154241);
        sum1 += i0 * mat4(0.005191,-0.051638,0.002485,-0.016497,0.228275,0.160874,0.325278,0.083021,0.076079,-0.071733,-0.015490,-0.060975,0.138893,-0.007883,0.057817,0.157212);
        sum1 += i1 * mat4(0.012718,-0.029211,-0.085319,-0.172451,0.163487,-0.220154,0.540710,0.040557,0.360275,0.011663,-0.508982,-0.451392,0.047015,-0.230963,0.098595,0.217113);
        sum1 += i2 * mat4(0.021673,-0.030575,-0.008085,-0.025286,0.435631,-0.069655,0.466625,0.176690,0.025105,-0.010061,0.168021,0.166185,0.018894,-0.123855,0.077757,0.145437);
        sum1 += i3 * mat4(-0.014826,-0.013527,0.017392,-0.144188,-0.335979,-0.190309,-0.001769,0.148398,-0.010660,-0.027587,0.176505,-0.353902,0.135091,-0.298963,0.185399,0.324105);
        sum1 += i4 * mat4(-0.027910,0.200052,0.015553,-0.354616,-0.923987,-0.004112,-0.208590,-4.863925,0.123370,0.106371,0.234465,0.481532,0.247666,0.492948,-0.536962,-2.716118);
        sum1 += i5 * mat4(-0.012039,-0.037253,-0.003649,-0.155655,-0.486442,0.095362,-0.111554,-0.093569,-0.054709,-0.214700,0.035288,0.216030,0.313923,-0.090120,-0.136755,-0.345739);
        sum1 += i6 * mat4(0.002599,-0.032010,0.000319,-0.016717,-0.251542,0.095105,0.141665,-0.108886,0.298758,-0.126448,0.093787,0.110087,0.351355,-0.107173,0.038012,0.157573);
        sum1 += i7 * mat4(-0.012929,-0.031483,0.038434,-0.154862,0.021590,0.003586,0.211129,-0.552737,0.396778,-0.320324,0.049777,0.266781,0.094160,-0.180518,0.270427,-0.485223);
        sum1 += i8 * mat4(0.020498,-0.031942,-0.000678,-0.024139,0.174151,-0.058289,0.103286,0.001786,0.114276,0.042151,0.059398,0.113767,0.295287,-0.106429,0.128602,-0.044864);
        i0 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, -1), 0);
        i1 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, -1), 0);
        i2 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, -1), 0);
        i3 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, 0), 0);
        i4 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, 0), 0);
        i5 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, 0), 0);
        i6 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, 1), 0);
        i7 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, 1), 0);
        i8 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, 1), 0);
        sum0 += i0 * mat4(-0.011455,-0.214181,0.399073,-0.278885,-0.091607,-0.006903,0.008174,-0.013069,-0.069215,-0.172848,-0.082418,0.205440,0.075866,-0.045554,-0.152707,-0.027037);
        sum0 += i1 * mat4(-0.299365,0.685365,-1.425167,-0.090378,-0.150823,0.108514,-0.091546,0.080867,0.263081,0.092775,-0.221498,0.029570,-0.390757,0.170664,-0.161009,0.058665);
        sum0 += i2 * mat4(0.241085,-0.200260,0.650578,0.077021,-0.052687,-0.105875,0.098062,0.055373,-0.042719,-0.246552,-0.463221,0.273781,-0.045667,-0.191675,0.269659,0.001158);
        sum0 += i3 * mat4(-0.027663,-0.212087,0.640171,-0.408417,0.283101,-0.151320,0.103183,-0.179048,0.032021,-0.252208,-0.095814,0.071217,0.180548,0.036000,0.167105,-0.019470);
        sum0 += i4 * mat4(-1.920884,0.509409,0.546142,0.099263,0.976721,0.355900,-0.461785,-0.083048,-0.018273,0.080691,-0.693964,-0.146766,-1.202618,-0.083902,-0.334076,-0.144557);
        sum0 += i5 * mat4(1.173915,0.109005,-0.874860,0.314975,-0.051379,-0.057844,0.054961,-0.018428,0.001010,0.280162,-0.206415,0.014968,-0.273130,0.170952,-0.063539,-0.089454);
        sum0 += i6 * mat4(0.061816,0.061474,0.527566,-0.084521,0.104009,0.070136,0.290311,0.090181,0.116010,0.032995,-0.225516,0.162560,0.045356,0.013970,0.129780,0.030563);
        sum0 += i7 * mat4(-0.552706,-0.328226,-0.078637,-0.060386,0.448940,-0.171383,-0.082411,0.083372,-0.262677,-0.231831,-0.385705,0.046290,0.058745,0.023868,-0.022954,0.050320);
        sum0 += i8 * mat4(0.485698,-0.036915,0.341560,0.089794,-0.063470,0.017928,-0.037941,-0.040378,0.083958,-0.115757,-0.239786,0.160573,0.109146,-0.043959,-0.048658,0.034872);
        sum1 += i0 * mat4(-0.006987,-0.013892,-0.013010,-0.008627,-0.070797,0.063560,0.299000,0.061349,0.048678,-0.150137,-0.079683,-0.045234,-0.070884,0.020053,0.174984,-0.030366);
        sum1 += i1 * mat4(0.101900,0.002285,-0.019075,-0.027732,-0.042951,-0.074859,-0.420824,0.267735,0.340765,0.305584,-0.176223,-0.141997,-0.095998,-0.057412,-0.108960,0.091024);
        sum1 += i2 * mat4(0.011069,0.022061,-0.005836,-0.004366,-0.096027,-0.076590,0.392814,0.194342,-0.041287,-0.031567,0.181521,0.153179,-0.124220,-0.026396,0.062372,0.069813);
        sum1 += i3 * mat4(0.037119,-0.018350,0.022238,0.012607,0.065267,0.028406,-0.427999,-0.218703,0.290269,0.168385,0.448220,0.133160,-0.167479,0.052806,-0.057232,-0.023353);
        sum1 += i4 * mat4(0.466599,0.038754,-0.007486,0.007431,-0.050404,-0.335782,0.554411,-0.064533,1.081160,-0.187851,-0.526586,0.144421,1.081703,-0.274123,0.429952,-0.154475);
        sum1 += i5 * mat4(0.076876,-0.002035,-0.015261,0.007486,0.119963,0.483623,-0.736616,-0.274030,-0.078242,-0.022678,-0.038231,-0.033281,0.289259,0.228114,-0.390740,-0.099839);
        sum1 += i6 * mat4(0.000273,0.007620,0.008438,-0.000584,-0.008540,0.587401,0.168594,0.179724,-0.034701,-0.076817,0.081091,-0.069341,-0.080066,-0.047563,-0.270140,-0.022038);
        sum1 += i7 * mat4(0.043077,-0.029496,0.002425,0.016833,0.239316,-0.136788,-0.377174,0.187205,-0.147837,0.067577,0.139120,-0.011718,0.525068,0.210691,0.101176,0.125176);
        sum1 += i8 * mat4(-0.013792,-0.010700,0.020480,-0.003726,-0.075011,-0.142015,0.327058,0.066449,-0.035496,-0.020078,-0.058563,-0.006606,0.053600,-0.167675,0.196104,0.006291);
        highp uint bufIdx = gl_GlobalInvocationID.y * gl_NumWorkGroups.x * gl_WorkGroupSize.x + gl_GlobalInvocationID.x;
        outFeatures.data[bufIdx][0] = packUnorm4x8(sum0);
        outFeatures.data[bufIdx][1] = packUnorm4x8(sum1);
    }
    )
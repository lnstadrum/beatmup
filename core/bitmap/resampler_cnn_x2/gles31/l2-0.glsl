/*
    Beatmup image and signal processing library
    Copyright (C) 2020, lnstadrum

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
STRINGIFY(
    uniform sampler2D[3] inFeatures;
    layout(binding = 0, std430) writeonly buffer outFeatures_ { highp uint data[][8]; } outFeatures;
    void main() {
        lowp vec4 i0, i1, i2, i3, i4, i5, i6, i7, i8;
        mediump vec4 sum0 = vec4(0.400508, -0.023574, -0.754653, -0.112271);
        mediump vec4 sum1 = vec4(0.126172, -0.528314, 0.045595, -0.083336);
        i0 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, -1), 0);
        i1 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, -1), 0);
        i2 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, -1), 0);
        i3 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, 0), 0);
        i4 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, 0), 0);
        i5 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, 0), 0);
        i6 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, 1), 0);
        i7 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, 1), 0);
        i8 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, 1), 0);
        sum0 += i0 * mat4(-0.953884,-0.007651,-0.343214,-0.065068,0.431431,-0.018850,-0.129220,-3.575548,-0.729442,0.327596,-0.263534,-0.180258,0.511394,-0.163091,0.024412,0.025506);
        sum0 += i1 * mat4(0.365774,-0.852430,-0.445131,-0.063919,-0.187048,0.100917,0.323003,-0.463504,-1.914080,1.048768,-0.392766,0.277225,0.062713,0.440830,-0.072748,0.054938);
        sum0 += i2 * mat4(0.001377,0.251500,0.095403,0.583735,-0.084301,-0.165861,-0.212189,-1.202044,2.452495,-3.014219,1.015246,1.243305,-0.034389,0.123053,0.060656,0.013350);
        sum0 += i3 * mat4(0.112125,0.333996,0.158970,-0.573873,-0.112964,-0.186870,0.256616,-1.770144,-0.035176,0.814528,0.221598,-1.182346,-0.113767,-0.044554,0.023150,0.078831);
        sum0 += i4 * mat4(0.187150,-0.215632,-0.245080,-0.528767,0.152004,-0.325462,-0.563911,-0.181681,0.941956,0.440930,-1.273886,-0.038418,-0.066425,0.052528,0.043415,-0.031335);
        sum0 += i5 * mat4(-0.067422,-0.072709,0.407427,-0.163209,0.016601,-0.098049,0.279376,-1.313284,-0.471825,-1.443641,-1.381740,-0.534312,-0.003519,0.051814,0.063132,0.037376);
        sum0 += i6 * mat4(-0.130768,0.041198,-0.030463,-0.267940,-0.329189,0.138732,-0.063198,0.123052,-0.010789,0.117375,-0.562092,0.287111,0.089724,0.025575,0.027640,0.032941);
        sum0 += i7 * mat4(-0.042561,0.286882,0.539004,-0.200920,0.175118,0.349372,0.111346,-0.035207,-0.059050,-0.232452,-0.625488,0.172913,0.048541,-0.049443,-0.034479,0.064546);
        sum0 += i8 * mat4(-0.005869,0.137359,0.058153,0.179375,0.011630,0.056058,0.388145,-1.378997,-0.178213,0.812181,0.863435,-1.424623,-0.025696,-0.050277,-0.010149,0.054978);
        sum1 += i0 * mat4(0.270469,-0.394212,0.108427,-0.150624,-3.357023,0.752302,-0.127215,-0.351519,-0.645177,0.485692,-0.246650,0.387124,0.422986,0.006977,-0.001091,-0.008676);
        sum1 += i1 * mat4(-0.244824,-0.056092,-0.840675,0.254764,0.979943,-4.695831,0.431985,0.313803,0.070857,0.480191,-0.501392,0.448387,-0.122902,0.497079,-0.083610,-0.005735);
        sum1 += i2 * mat4(0.056235,0.329714,0.083756,0.733068,-0.307743,1.466611,0.188444,-0.857400,-0.137978,-0.324996,-0.253634,-0.068775,-0.018790,-0.065835,-0.013704,0.017281);
        sum1 += i3 * mat4(-0.990827,-0.055891,-0.080796,-0.069911,0.297315,1.240437,-0.393784,-1.271335,-0.415190,-0.573535,0.128458,-0.129924,-0.166885,-0.095056,-0.037398,-0.041597);
        sum1 += i4 * mat4(-0.331326,0.141344,0.482950,-0.476123,0.999301,-1.541164,-3.466187,-0.793110,-0.168318,-0.001811,0.631114,0.094568,-0.065075,0.002379,0.112813,-0.005215);
        sum1 += i5 * mat4(0.227962,0.614472,-0.081668,0.129453,-0.632507,-0.274891,-0.584541,-2.277266,0.107369,0.366636,0.030927,0.243060,-0.024121,-0.006645,-0.041728,0.022110);
        sum1 += i6 * mat4(0.440361,-0.132186,-0.387132,-0.068179,0.447184,-0.416382,-0.769565,-2.716808,0.266984,0.072079,-0.092276,0.737961,0.029413,-0.018002,-0.009737,-0.023307);
        sum1 += i7 * mat4(0.178608,-0.344294,-0.219143,0.250989,-0.294250,1.443869,1.590911,-3.013300,0.338756,0.047121,-0.210490,0.992814,0.066482,-0.033954,0.006847,-0.033334);
        sum1 += i8 * mat4(-0.237248,-0.350259,-0.346967,0.114980,0.318960,1.079819,-0.560131,-0.759488,-0.035461,-0.110548,0.082557,0.251819,-0.030345,-0.049484,0.012830,-0.011076);
        i0 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, -1), 0);
        i1 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, -1), 0);
        i2 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, -1), 0);
        i3 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, 0), 0);
        i4 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, 0), 0);
        i5 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, 0), 0);
        i6 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, 1), 0);
        i7 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, 1), 0);
        i8 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, 1), 0);
        sum0 += i0 * mat4(0.151283,0.146577,0.074648,-0.018113,-0.346820,0.037120,0.068915,-0.424820,-0.108551,0.412678,0.286960,0.371630,-0.077981,0.002278,-0.031409,-0.004814);
        sum0 += i1 * mat4(0.255464,0.113460,-0.033143,-0.003696,0.143233,0.065329,0.578487,-0.252805,-1.001587,0.094141,0.284998,0.280495,-0.063751,0.206704,-0.001947,0.004887);
        sum0 += i2 * mat4(0.260925,0.299679,0.076142,-0.027995,-0.145894,-0.090245,0.087146,-0.131694,0.030444,-0.981211,0.787072,0.042808,-0.022289,0.311567,0.006620,-0.012956);
        sum0 += i3 * mat4(0.528825,0.004334,0.330012,-0.234902,-0.111209,-0.023013,0.024248,0.233054,1.502122,-0.010575,0.109967,0.560095,0.069542,-0.032724,-0.047388,-0.010260);
        sum0 += i4 * mat4(-0.403947,-0.336631,-0.167359,-0.043222,-0.040678,0.064036,-2.784345,0.042848,-0.019161,-0.300078,0.330577,0.445006,-0.149396,0.152856,-0.082395,-0.012161);
        sum0 += i5 * mat4(-0.303069,-0.049157,0.168019,0.007944,0.025392,-0.165385,0.170638,-0.632056,-4.785531,-0.939636,0.449713,1.200859,0.030548,0.292944,0.060106,-0.035980);
        sum0 += i6 * mat4(-0.031281,-0.007467,0.101705,0.140250,0.281087,-0.137133,0.086928,-0.493827,0.142346,-0.370113,0.451938,0.747596,-0.043917,-0.019131,-0.006693,-0.002497);
        sum0 += i7 * mat4(0.129385,0.173606,0.124099,0.445908,0.120128,0.059987,0.258528,-0.163474,-0.367653,-0.275204,0.380803,-0.018374,-0.011403,-0.008733,0.000878,0.013033);
        sum0 += i8 * mat4(0.065091,0.123081,-0.061669,0.078985,0.153092,0.051309,0.212676,0.226914,-0.152757,0.063811,-0.044339,0.940831,0.016949,-0.135259,-0.016111,-0.246937);
        sum1 += i0 * mat4(0.294946,-0.298098,0.025765,0.141107,-0.839270,0.449133,1.449859,-0.396046,0.071269,-0.041342,-0.119897,0.032005,0.088878,-0.063056,0.025151,0.008575);
        sum1 += i1 * mat4(-0.436197,0.544764,-0.137079,-0.153176,0.744138,-1.049597,0.553062,-0.813632,-0.202078,-0.079008,0.149885,-0.145913,0.037721,0.371818,-0.005777,0.005247);
        sum1 += i2 * mat4(-0.011406,0.363660,0.144132,-0.077602,0.476223,-1.298252,0.913510,0.215714,0.006638,0.750558,0.134081,-0.052550,0.017140,0.200857,-0.001046,0.017643);
        sum1 += i3 * mat4(-0.432578,0.266109,0.226408,0.315640,0.087484,-0.158950,0.879801,0.130756,-0.230347,0.278725,0.206325,-0.054727,-0.015742,0.006623,0.044479,0.014630);
        sum1 += i4 * mat4(-0.253570,0.085737,1.459591,-0.259476,-2.311710,-0.924335,0.161496,0.101140,0.037669,0.252178,-1.170551,0.168732,0.096135,0.331886,-0.198957,0.008717);
        sum1 += i5 * mat4(0.025914,-0.367062,0.012852,0.258104,-1.553443,-1.251168,-0.012100,0.519985,-0.007794,-0.249777,-0.027445,-0.091911,-0.014573,0.342897,-0.033745,0.026681);
        sum1 += i6 * mat4(0.656970,-0.109823,-0.075856,-0.035008,-0.184942,0.341584,1.036353,1.877892,-0.365619,-0.193365,-0.359476,-0.118413,0.031561,-0.024304,0.015840,-0.006616);
        sum1 += i7 * mat4(0.135915,-0.128224,-0.320800,0.343159,1.135564,0.016057,0.097912,0.072797,0.000452,-0.240060,-0.573171,-0.111073,0.025429,-0.027938,0.007246,-0.026259);
        sum1 += i8 * mat4(-0.081830,0.212571,-0.082997,0.385700,0.593723,-0.537646,0.583766,-0.437380,0.010986,-0.207334,-0.112935,0.505964,0.000586,-0.115404,0.004344,0.000977);
        i0 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, -1), 0);
        i1 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, -1), 0);
        i2 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, -1), 0);
        i3 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, 0), 0);
        i4 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, 0), 0);
        i5 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, 0), 0);
        i6 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, 1), 0);
        i7 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, 1), 0);
        i8 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, 1), 0);
        sum0 += i0 * mat4(-0.095228,0.189700,-0.200356,0.046157,-0.384825,0.081879,-0.004333,0.341922,-4.015074,1.324409,-0.581346,-0.505059,-0.009278,-0.016029,0.007388,0.007642);
        sum0 += i1 * mat4(0.141255,0.189079,-0.058081,0.171611,-1.064699,0.193254,0.077660,0.160328,-2.219945,1.009465,-0.318419,-0.653107,-0.022403,-0.021735,0.005830,0.026214);
        sum0 += i2 * mat4(0.054946,0.425526,-0.016556,0.218245,0.029720,-0.019191,-0.088481,0.399514,-3.191976,0.713585,0.588899,-0.090875,-0.056287,-0.033920,0.002896,0.050782);
        sum0 += i3 * mat4(0.062951,-0.013698,-0.084388,0.126675,-1.556149,0.259392,-0.059830,0.198220,-3.309488,0.673847,0.107516,-0.590321,0.027994,-0.005858,0.025784,0.002026);
        sum0 += i4 * mat4(-0.396473,0.048404,-0.050868,0.003475,-2.613727,-0.080712,-0.201843,0.279463,0.870967,0.011989,0.146759,-0.438217,-0.055457,0.001605,0.012545,-0.039245);
        sum0 += i5 * mat4(0.261207,0.473401,0.108665,0.087093,-0.978731,-0.085350,-0.211773,0.249009,-1.595922,-0.205353,-0.784813,-0.399039,0.031692,0.061205,0.032675,-0.019690);
        sum0 += i6 * mat4(0.029700,0.241107,-0.206756,0.008980,-1.739890,0.122661,0.175794,0.498936,-1.307255,0.299888,0.078366,-0.073441,0.067070,-0.016442,0.041628,-0.030202);
        sum0 += i7 * mat4(0.130964,0.289278,-0.513693,0.105074,-1.735401,0.520110,-1.292803,0.044976,-1.027414,0.363226,-1.174270,0.543370,0.005813,0.002032,-0.229933,-0.020308);
        sum0 += i8 * mat4(-0.224090,0.429244,0.303681,0.181771,-1.930220,2.092917,-0.151479,-0.140610,-2.079044,-0.089900,0.444689,-0.457736,-0.028226,0.039200,-0.021159,0.005346);
        sum1 += i0 * mat4(0.121140,-0.017065,-0.105242,0.053662,-3.689020,0.665802,-1.511942,-0.613220,0.401940,-0.000146,0.066335,0.030790,0.003934,0.011766,-0.000367,-0.002477);
        sum1 += i1 * mat4(0.697148,0.022564,-0.157185,-0.061208,-0.604623,1.096182,0.133423,0.361837,-0.053369,-0.106911,0.139745,-0.060554,0.006849,0.007027,-0.002898,-0.019231);
        sum1 += i2 * mat4(-0.004412,-0.028273,-0.137412,0.124549,-2.441013,0.852109,-0.026215,0.330017,0.097991,-0.179727,0.186797,0.205805,0.036731,0.008374,-0.001480,-0.016304);
        sum1 += i3 * mat4(0.647653,-0.124673,-0.085031,-0.177097,-1.696903,0.270568,-0.776274,-0.531415,0.382396,0.018794,0.078322,0.174493,-0.010748,-0.003833,-0.009915,0.005713);
        sum1 += i4 * mat4(-0.117798,0.066498,0.166798,-0.240448,-2.549007,-0.306180,-0.190423,-1.303405,-0.755031,-0.112797,-0.174888,0.081320,-0.066209,-0.013157,-0.005240,0.028369);
        sum1 += i5 * mat4(0.224572,-0.314355,0.020028,-0.421457,-2.529965,-0.454377,-0.531019,0.056699,-1.119891,-0.064826,-0.114915,0.046655,-0.008995,-0.005600,0.000411,0.034690);
        sum1 += i6 * mat4(0.180651,-0.127915,-0.164348,0.063538,-2.558090,0.906809,-3.133132,-0.491641,0.320351,-0.095686,-0.057945,0.216403,-0.035566,-0.003285,-0.044935,0.018899);
        sum1 += i7 * mat4(0.451285,-0.532188,0.156623,0.216445,-0.429518,-0.384498,-0.009741,0.251524,0.129192,0.489978,-0.619358,-0.261549,-0.014675,0.043828,0.093647,0.005179);
        sum1 += i8 * mat4(0.263678,-0.524627,0.257804,-0.660470,-2.740082,0.012336,1.215935,1.025620,0.276841,0.416329,-0.047780,-0.009483,0.030108,-0.068600,0.023727,-0.032128);
        highp uint bufIdx = gl_GlobalInvocationID.y * gl_NumWorkGroups.x * gl_WorkGroupSize.x + gl_GlobalInvocationID.x;
        outFeatures.data[bufIdx][0] = packUnorm4x8(sum0);
        outFeatures.data[bufIdx][1] = packUnorm4x8(sum1);
    }
    )
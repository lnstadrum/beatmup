/*
    Beatmup image and signal processing library
    Copyright (C) 2020, lnstadrum

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
STRINGIFY(
    uniform sampler2D[3] inFeatures;
    layout(binding = 0, std430) writeonly buffer outFeatures_ { highp uint data[][8]; } outFeatures;
    void main() {
        lowp vec4 i0, i1, i2, i3, i4, i5, i6, i7, i8;
        mediump vec4 sum0 = vec4(0.156778, 0.147487, -2.391777, -0.039113);
        mediump vec4 sum1 = vec4(0.196244, -0.004417, 0.062346, 0.210693);
        i0 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, -1), 0);
        i1 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, -1), 0);
        i2 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, -1), 0);
        i3 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, 0), 0);
        i4 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, 0), 0);
        i5 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, 0), 0);
        i6 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, 1), 0);
        i7 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, 1), 0);
        i8 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, 1), 0);
        sum0 += i0 * mat4(-0.127586,0.041531,0.383832,0.122114,-0.142732,0.054397,0.301348,0.088676,0.120314,0.551824,-0.264667,-0.242573,-0.054053,-0.054774,0.282277,0.100423);
        sum0 += i1 * mat4(0.084330,0.271290,-0.021671,0.133224,-0.061032,-0.048037,0.349331,0.047642,0.071460,1.394384,-0.054779,-0.104771,0.060233,0.260515,0.274759,0.090396);
        sum0 += i2 * mat4(0.024236,-0.239000,0.216838,0.142979,-0.136473,-0.072457,0.125711,0.069747,0.109359,0.115900,-0.291848,0.014841,-0.058623,-0.076041,0.321393,0.057819);
        sum0 += i3 * mat4(-0.009610,-0.067360,-0.408004,0.265029,-0.156693,-0.038702,-0.101541,0.148132,0.066362,0.542450,-0.233371,0.293535,0.019414,0.098719,-0.348872,0.159388);
        sum0 += i4 * mat4(0.096540,-0.143089,0.581511,0.202832,-0.061047,0.103571,0.098084,0.117071,0.229084,-1.655735,0.366848,-0.077109,-0.011424,-0.128926,0.369284,0.093373);
        sum0 += i5 * mat4(0.041347,0.039950,-0.101150,0.093247,-0.163310,-0.092016,-0.680130,0.056748,0.138966,0.127816,-0.092012,-0.084311,-0.085313,-0.094751,-0.179887,0.050516);
        sum0 += i6 * mat4(0.027218,-0.021265,-1.341285,0.202053,-0.171664,-0.062490,-0.413504,0.172339,0.109473,0.303940,-0.323349,0.207176,-0.025191,-0.023599,-0.225066,0.012649);
        sum0 += i7 * mat4(0.024288,-0.047611,0.122588,0.063399,-0.170103,-0.133441,-0.169034,0.013176,-0.190521,0.929980,0.513895,0.461827,-0.011041,-0.059206,-0.518741,0.045646);
        sum0 += i8 * mat4(-0.081200,0.071432,0.181627,0.131803,-0.221975,0.105561,0.118687,0.126127,0.157533,0.454577,-0.088887,-0.040487,-0.111838,0.121039,0.210293,0.076743);
        sum1 += i0 * mat4(-0.065407,0.136853,0.625618,0.093521,-0.030017,-0.054475,-0.668210,-0.078488,0.009216,-0.014667,-0.502985,-0.095719,0.099244,-0.316198,-1.077767,-0.102092);
        sum1 += i1 * mat4(-0.076324,-0.169887,-0.024059,0.077542,0.014069,0.167055,-0.441122,-0.110766,-0.109809,-0.075769,0.063096,-0.073724,0.035513,0.203281,-0.540756,-0.048664);
        sum1 += i2 * mat4(-0.140622,-0.058409,-0.147275,0.054907,-0.068458,-0.052941,-0.191630,-0.097102,-0.041709,-0.081372,-0.515776,-0.116681,-0.020930,0.098986,-0.324232,-0.128418);
        sum1 += i3 * mat4(-0.093913,-0.193771,0.523879,0.274799,-0.025265,-0.041707,0.210748,-0.129613,-0.085525,0.036297,0.009283,-0.129105,0.028567,0.065496,-0.463525,-0.041726);
        sum1 += i4 * mat4(-0.265127,-0.296112,-1.190775,-0.176386,0.017877,-0.226937,0.456952,-0.140680,0.043968,-0.294568,-0.136915,-0.116012,0.016421,-0.152203,0.678362,-0.092492);
        sum1 += i5 * mat4(-0.126303,-0.044643,-0.214477,-0.008683,0.061443,0.171233,-0.331161,-0.101330,0.021848,0.013882,0.111046,-0.068971,0.098682,-0.165143,-0.319203,-0.158557);
        sum1 += i6 * mat4(0.028624,0.088213,-0.178612,-0.191286,-0.044684,0.096907,0.594328,-0.093180,-0.069265,0.052448,0.724839,-0.067070,0.019801,0.023808,1.224741,-0.308202);
        sum1 += i7 * mat4(0.031300,0.027179,-0.479833,-0.321609,0.017044,0.031089,0.427184,0.026726,-0.004664,0.145643,0.361622,-0.044078,0.101318,0.050255,0.407817,0.146365);
        sum1 += i8 * mat4(-0.083480,-0.040123,0.607562,-0.155546,-0.006366,-0.107833,-0.045904,-0.144438,0.044146,-0.143912,-0.203823,-0.156239,0.147339,-0.055217,-0.098739,-0.212879);
        i0 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, -1), 0);
        i1 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, -1), 0);
        i2 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, -1), 0);
        i3 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, 0), 0);
        i4 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, 0), 0);
        i5 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, 0), 0);
        i6 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, 1), 0);
        i7 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, 1), 0);
        i8 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, 1), 0);
        sum0 += i0 * mat4(-0.044612,0.297931,-0.198033,-0.137740,0.057007,0.298235,-0.046780,-0.025632,-0.567364,0.265325,-0.893097,-0.428271,-0.072772,0.258586,-0.044753,-0.073020);
        sum0 += i1 * mat4(-0.002108,0.162114,-0.106002,-0.066546,-0.023404,0.145597,-0.055465,0.116237,0.114936,-0.264553,-0.114537,0.042528,0.019631,0.152739,-0.105407,-0.152209);
        sum0 += i2 * mat4(0.019469,0.131408,-0.046719,-0.056340,0.006457,0.186653,-0.066096,0.127515,-0.724355,0.090708,0.103799,-0.081591,-0.012615,0.108231,0.021217,0.155563);
        sum0 += i3 * mat4(0.136346,0.280064,0.247439,-0.107276,-0.026055,0.200466,0.021885,0.019467,4.142009,0.041591,-0.828780,-0.235553,0.001886,0.142697,-0.256764,-0.031993);
        sum0 += i4 * mat4(-0.152562,0.052327,-0.041878,-0.118966,0.022429,0.092235,-0.023323,0.089538,-0.187658,0.172780,-0.146661,-0.429108,0.016290,0.076159,-0.165740,0.044838);
        sum0 += i5 * mat4(0.016650,0.080949,-0.143665,-0.023743,0.024987,0.023060,-0.041903,0.178416,0.511497,0.220593,-0.026525,-0.247153,0.000721,0.051248,-0.047573,0.072607);
        sum0 += i6 * mat4(-0.054675,0.178789,-0.179854,-0.039937,-0.056170,0.222413,0.171293,0.057368,-0.441126,-0.189511,0.402488,0.202264,0.103324,0.120938,0.244872,0.178664);
        sum0 += i7 * mat4(0.107917,0.100425,0.188470,-0.136929,0.048634,0.140615,-0.008088,0.122456,0.042216,-0.105929,1.270252,-1.559588,-0.048796,0.161895,0.095108,0.628169);
        sum0 += i8 * mat4(-0.001976,0.138601,-0.060327,0.117589,-0.022060,0.113829,-0.004702,0.084763,-0.577376,-0.017975,0.291572,-0.278470,0.022942,0.126782,0.024067,0.426212);
        sum1 += i0 * mat4(0.152475,0.361961,0.064179,0.063889,-0.180585,-0.172352,0.068483,0.030300,-0.029137,-0.131842,0.087199,0.040245,-0.095477,-0.280276,0.023538,0.039391);
        sum1 += i1 * mat4(-0.038869,-0.030799,-0.156180,0.225498,0.153566,-0.078186,0.008046,0.040591,0.043646,-0.099679,0.071082,0.296754,0.036392,-0.058626,-0.108604,0.084261);
        sum1 += i2 * mat4(-0.124389,0.088793,-0.109016,-0.320889,0.001535,-0.202512,0.049888,-0.046081,0.008489,-0.154979,0.030720,-0.080138,0.057123,-0.229718,0.049197,-0.252778);
        sum1 += i3 * mat4(0.213272,0.190464,-0.569793,0.189786,0.116341,-0.168620,0.019322,-0.054885,0.051806,-0.198612,-0.018330,-0.032871,0.022285,-0.289958,-0.185202,-0.284928);
        sum1 += i4 * mat4(-0.132693,-0.019723,0.314208,0.107965,-0.103196,-0.123152,-0.193627,0.180696,0.003740,-0.019612,-0.058325,0.373102,0.056601,-0.214833,0.011626,-0.597447);
        sum1 += i5 * mat4(-0.047919,0.036735,0.208029,-0.919601,-0.019399,-0.071875,0.096605,-0.035238,-0.016127,-0.054695,0.088343,-0.010966,-0.036546,-0.279789,0.075845,-0.396171);
        sum1 += i6 * mat4(0.018226,0.039457,-0.696539,0.377599,0.041610,-0.183868,0.063138,-0.106048,-0.094266,-0.222528,0.001266,-0.202091,0.130506,-0.256962,-0.014771,-0.279743);
        sum1 += i7 * mat4(-0.069104,-0.046697,0.186952,0.297031,-0.054719,-0.145362,0.201483,-0.121205,0.018960,-0.132308,-0.156180,0.558592,-0.162227,-0.219140,0.080385,-0.236660);
        sum1 += i8 * mat4(-0.034214,0.021965,-0.169864,-1.482336,0.023113,-0.111490,-0.034210,0.115059,0.041966,-0.120095,0.006207,0.621501,-0.010219,-0.266743,-0.024571,-0.006327);
        i0 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, -1), 0);
        i1 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, -1), 0);
        i2 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, -1), 0);
        i3 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, 0), 0);
        i4 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, 0), 0);
        i5 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, 0), 0);
        i6 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, 1), 0);
        i7 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, 1), 0);
        i8 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, 1), 0);
        sum0 += i0 * mat4(-0.003780,-0.192246,-0.148982,-0.190151,-0.006510,0.012888,0.021483,-0.120912,-0.359507,0.013596,-0.056860,0.287411,0.166006,-0.156690,-0.110745,-0.170669);
        sum0 += i1 * mat4(-0.043949,-0.155684,-0.365838,-0.079655,-0.141593,-0.095063,0.062082,-0.067889,-0.062058,-0.132863,-0.235198,-0.072707,-0.185678,-0.155170,-0.148573,-0.097106);
        sum0 += i2 * mat4(-0.080160,-0.271148,-0.333823,-0.004768,-0.043605,-0.005719,-0.011405,-0.030253,-0.051990,0.308625,0.090325,0.232008,0.013141,-0.085533,-0.132483,-0.047995);
        sum0 += i3 * mat4(-0.138888,-0.246573,-0.224144,-0.093253,-0.030014,-0.004184,0.001012,-0.023637,0.154777,0.219668,0.368143,0.046288,-0.154191,-0.097651,-0.029691,-0.099672);
        sum0 += i4 * mat4(-0.434966,-0.109527,-0.340397,0.202993,-0.059235,-0.014032,-0.004494,-0.016013,0.255004,0.391818,-0.262769,-0.092467,-0.020373,-0.077523,-0.105452,0.302295);
        sum0 += i5 * mat4(-0.167588,-0.163228,-0.310195,-0.066263,-0.044756,-0.090325,-0.014064,-0.018928,-0.038081,-0.014941,-0.086225,-0.160224,0.064354,-0.034024,-0.080065,-0.042370);
        sum0 += i6 * mat4(-0.048686,-0.307699,-0.060012,0.347194,0.309075,0.051041,0.087163,0.047160,1.220934,-0.098128,-0.297600,0.182835,-0.447852,-0.047234,-0.002563,0.084291);
        sum0 += i7 * mat4(0.388479,-0.106124,-0.194207,0.425201,0.143000,-0.083427,0.021777,0.145568,-0.096679,-0.247926,-0.187050,0.064636,-0.466177,-0.144220,-0.103923,0.252880);
        sum0 += i8 * mat4(-0.089761,-0.023309,-0.135902,0.036119,-0.158523,0.030945,0.011165,-0.001197,-1.233034,0.265463,-0.181662,0.174329,0.011995,-0.023494,-0.079882,-0.200510);
        sum1 += i0 * mat4(0.006740,0.037568,0.378996,0.047897,-0.068989,0.238843,0.077266,0.124101,-0.329687,0.285750,0.149201,0.173408,-0.262223,0.314393,0.126331,0.156211);
        sum1 += i1 * mat4(-0.015951,0.059972,-0.506034,0.037226,0.039918,0.118004,0.150632,0.153030,0.142300,0.084626,0.213808,0.087203,0.227842,0.071361,0.081641,0.199363);
        sum1 += i2 * mat4(0.017420,-0.127009,-0.576800,0.118505,-0.040033,0.157748,0.139072,-0.037707,-0.078269,0.174149,0.144150,0.021425,0.049935,0.221772,0.148786,0.014060);
        sum1 += i3 * mat4(0.149070,0.130276,0.374567,0.043369,-0.139993,0.122900,0.065734,0.021973,-0.472894,0.134740,0.038873,0.084527,0.552258,0.184211,0.003924,0.189819);
        sum1 += i4 * mat4(0.643488,0.064039,0.168198,0.237093,-0.039842,0.109878,0.026296,0.129299,-0.073831,0.068784,0.078571,0.048278,0.238983,0.071941,-0.029280,0.270645);
        sum1 += i5 * mat4(-0.323573,0.093491,-0.048136,-0.797876,0.063245,0.048638,0.158671,-0.163445,-0.012294,0.056099,0.106942,0.087888,-0.070242,0.165366,0.142764,0.108818);
        sum1 += i6 * mat4(-0.124663,0.125342,0.167488,0.171900,0.234593,0.129747,0.031853,-0.125521,-0.461008,0.119139,0.078260,-0.062389,-0.327843,0.170332,-0.116051,-0.112914);
        sum1 += i7 * mat4(-0.163307,-0.036662,-0.183232,-0.004447,-0.028423,0.066744,0.051972,-0.056919,-0.721182,0.124909,0.125891,-0.280604,-0.506870,0.022945,0.079827,0.036326);
        sum1 += i8 * mat4(-0.138519,0.175223,-0.051514,-0.212442,-0.129699,0.123566,0.108088,0.201636,0.045236,0.125728,0.131077,0.292578,-0.290458,0.143662,0.087595,0.015307);
        highp uint bufIdx = gl_GlobalInvocationID.y * gl_NumWorkGroups.x * gl_WorkGroupSize.x + gl_GlobalInvocationID.x;
        outFeatures.data[bufIdx][6] = packUnorm4x8(sum0);
        outFeatures.data[bufIdx][7] = packUnorm4x8(sum1);
    }
    )
/*
    Beatmup image and signal processing library
    Copyright (C) 2020, lnstadrum

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
STRINGIFY(
    uniform sampler2D[3] inFeatures;
    layout(binding = 0, std430) writeonly buffer outFeatures_ { highp uint data[][8]; } outFeatures;
    void main() {
        lowp vec4 i0, i1, i2, i3, i4, i5, i6, i7, i8;
        mediump vec4 sum0 = vec4(0.043561, 0.453397, -0.011995, -0.023606);
        mediump vec4 sum1 = vec4(0.460099, -0.520221, -0.069695, 0.102129);
        i0 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, -1), 0);
        i1 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, -1), 0);
        i2 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, -1), 0);
        i3 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, 0), 0);
        i4 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, 0), 0);
        i5 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, 0), 0);
        i6 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, 1), 0);
        i7 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, 1), 0);
        i8 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, 1), 0);
        sum0 += i0 * mat4(-0.136656,0.024205,0.190901,-0.044603,0.133343,0.062253,-0.226218,-0.024568,0.036074,0.096808,0.127893,-0.109396,0.107270,-0.088325,-0.355499,-0.147316);
        sum0 += i1 * mat4(0.213941,0.195588,-0.570525,-0.358364,-0.009052,-0.011991,0.389988,0.003019,0.006496,-0.184005,1.163286,-0.017590,-0.178670,0.246768,-4.910368,0.045413);
        sum0 += i2 * mat4(0.174522,-0.031750,0.248982,-0.630570,-0.051978,-0.019495,-0.115716,0.086924,0.034342,0.015967,0.180673,-0.050366,0.060489,0.247801,-0.474481,0.151028);
        sum0 += i3 * mat4(-0.480570,-0.199913,0.341750,0.003813,-0.039536,0.217686,-0.375445,-0.031517,-0.482144,0.005884,-0.476893,0.017923,0.221263,0.116273,-0.039609,-0.072694);
        sum0 += i4 * mat4(-0.103580,0.361692,-0.420352,0.043486,0.115661,-0.475856,0.440298,-0.029556,0.208769,-0.844483,-2.616362,0.065277,-0.091682,-0.221236,0.662052,0.009340);
        sum0 += i5 * mat4(0.145829,-0.007034,0.276489,0.109783,0.001350,-0.093278,-0.121674,-0.049687,0.069284,0.000546,-0.428783,0.095611,0.036749,-0.018664,0.234624,-0.021620);
        sum0 += i6 * mat4(0.201229,-0.171801,0.122184,0.028767,-0.039905,0.159359,-0.247771,-0.032016,0.345844,0.069280,-0.397024,0.003814,-0.152493,0.062852,-0.047094,-0.050832);
        sum0 += i7 * mat4(-0.070097,-0.009980,0.008257,0.016413,0.051046,0.061563,-0.193426,0.007836,-0.149013,0.790552,-0.441579,-0.052986,-0.038858,-0.123241,0.231473,0.030502);
        sum0 += i8 * mat4(-0.010424,-0.139080,0.052108,-0.010578,-0.034416,0.028204,-0.083373,-0.032497,0.029381,0.396643,-0.550737,-0.144931,-0.011514,-0.041052,-0.037898,-0.004307);
        sum1 += i0 * mat4(0.216337,0.048585,0.172845,-0.050494,0.253294,0.361434,0.197293,0.179859,0.995393,-0.104728,0.401546,-0.069335,1.011840,-0.104586,-0.382295,-0.177238);
        sum1 += i1 * mat4(0.049970,-0.041870,0.393968,-0.072097,0.475503,-0.394527,0.155615,0.043286,-0.086905,-0.096064,0.894219,0.181769,-0.565969,0.286126,1.020070,-0.071555);
        sum1 += i2 * mat4(0.007487,-0.006732,0.033530,-0.014374,0.505555,0.018485,-0.248171,-0.099009,-0.092396,0.027009,0.326420,0.187202,-0.312347,0.233754,-0.013766,0.052438);
        sum1 += i3 * mat4(-0.178298,0.168293,0.167854,0.057444,-2.149040,0.092159,-0.395030,0.209075,-0.017940,-0.236226,0.100066,-0.478428,0.820060,0.039786,-0.221191,0.010293);
        sum1 += i4 * mat4(0.007780,-0.682679,0.489358,0.073525,0.246790,-0.048951,0.791693,0.177727,0.134333,0.083849,0.437384,-0.174209,-0.030412,-0.168321,-0.304344,0.038380);
        sum1 += i5 * mat4(0.039058,-0.046418,0.236698,0.037203,0.298576,-0.008442,-0.201355,-0.115490,-0.162417,-0.119439,0.114369,-0.278161,-0.369594,-0.363753,-0.069861,0.062643);
        sum1 += i6 * mat4(0.099392,0.068265,0.040707,-0.014473,0.818130,0.211728,-0.225101,0.540891,-0.384480,0.083533,-0.093370,-0.288248,-1.326077,0.120363,0.013561,-0.049548);
        sum1 += i7 * mat4(-0.038482,0.003558,0.025008,-0.010625,0.718983,-0.104005,0.552564,0.431369,-0.199013,-0.114110,-0.519449,-0.061229,-0.243926,-0.011086,-1.160394,-0.034629);
        sum1 += i8 * mat4(0.021847,-0.082117,0.033217,0.004408,0.538851,-0.151082,-0.097170,0.326111,-0.144409,0.098716,-0.095031,-0.115523,-0.392142,0.003221,0.164104,0.039619);
        i0 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, -1), 0);
        i1 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, -1), 0);
        i2 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, -1), 0);
        i3 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, 0), 0);
        i4 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, 0), 0);
        i5 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, 0), 0);
        i6 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, 1), 0);
        i7 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, 1), 0);
        i8 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, 1), 0);
        sum0 += i0 * mat4(-0.156615,0.137730,0.030371,-0.009791,0.062012,-0.076492,-0.041300,-0.042599,-0.006232,0.002826,0.121952,0.044569,-0.046795,-0.149998,-0.188138,-0.067355);
        sum0 += i1 * mat4(0.034608,-0.137926,0.005728,-0.161587,0.104813,0.052701,-0.073546,-0.050935,-0.027055,0.012988,0.148185,0.195444,-0.069125,-0.102889,-0.171661,-0.202793);
        sum0 += i2 * mat4(-0.040065,0.050754,0.016782,0.165203,0.062917,-0.052918,-0.022407,-0.095897,-0.069155,0.031667,0.125656,0.232223,0.175483,-0.088798,-0.146515,-0.373473);
        sum0 += i3 * mat4(-0.084753,0.051765,-0.061749,-0.059592,0.043579,0.050513,-0.014565,-0.073875,0.011114,0.088387,0.105444,0.010314,0.118603,0.044453,0.051171,-0.073071);
        sum0 += i4 * mat4(0.618638,0.234070,0.211566,-0.166389,0.125314,-0.008238,-0.052246,0.058035,0.006341,-1.366341,-0.173027,-0.097438,0.398182,0.270702,0.347000,0.030383);
        sum0 += i5 * mat4(-0.617816,-0.079282,-0.182330,0.214577,0.170813,0.004343,-0.021538,-0.169837,0.356994,-0.085166,0.157529,-1.156577,-0.183223,0.015153,-0.069503,0.194223);
        sum0 += i6 * mat4(0.054621,-0.050491,0.102312,0.027914,-0.252366,-0.000796,-0.053451,-0.100796,-0.007061,-0.075419,-0.087720,-0.167280,0.011493,0.000783,0.196888,0.012126);
        sum0 += i7 * mat4(1.145697,0.197573,0.195908,-0.074257,-0.378877,-0.070806,-0.067971,0.018755,-0.078416,0.255118,0.191385,0.011414,-0.391801,-0.080598,-0.069492,0.201562);
        sum0 += i8 * mat4(-0.960710,-0.032433,0.062178,0.136767,0.072935,0.039817,-0.051137,-0.204247,-0.252959,-0.071068,-0.089071,-1.028242,0.039527,0.045392,0.135437,0.184982);
        sum1 += i0 * mat4(-0.088887,0.037001,0.064464,0.092301,0.257329,0.175136,-0.019480,0.135528,-0.187182,-0.040015,0.164349,0.137540,0.179568,-0.120709,-0.068559,-0.181547);
        sum1 += i1 * mat4(-0.137492,0.066403,0.031708,-0.028940,0.354320,0.230254,0.044575,0.023942,-0.092952,0.158083,0.045233,-0.097951,0.436569,0.364473,0.025669,-0.148698);
        sum1 += i2 * mat4(-0.112866,0.040426,0.070446,0.140225,0.255112,-0.001466,-0.105461,0.209053,-0.133968,-0.006685,0.207958,0.351137,0.068874,-0.059504,-0.147777,0.754369);
        sum1 += i3 * mat4(-0.044903,0.014725,0.115984,0.070818,0.142738,0.212857,-0.036317,0.003351,-0.035928,0.043742,0.334446,0.128989,0.021434,-0.024893,-0.046049,-0.253425);
        sum1 += i4 * mat4(-0.028980,-0.050842,0.141153,-0.123490,0.028551,-2.185515,0.254771,-0.348771,0.003483,-0.156829,0.299197,-0.298249,-0.008165,-0.427374,-0.395879,-0.272429);
        sum1 += i5 * mat4(-0.061080,-0.038029,0.135690,0.108717,0.049773,0.252207,-0.120056,-0.030395,-0.011449,-0.095508,0.279250,-0.174369,0.129465,0.100941,-0.009256,1.117848);
        sum1 += i6 * mat4(-0.201932,0.029218,0.114031,0.054205,-0.400468,0.105571,0.023376,0.227269,0.082624,0.003432,0.070738,0.070999,-0.020063,-0.038993,-0.043082,-0.168214);
        sum1 += i7 * mat4(-0.050700,0.089391,0.081779,0.040186,0.213405,-0.933343,-0.142433,-0.051500,0.349526,0.439309,0.133896,-0.051927,-0.357804,0.652575,-0.261470,-0.128877);
        sum1 += i8 * mat4(0.036317,0.005680,0.101723,0.044844,0.587338,0.065356,-0.156355,-0.190124,-0.132299,0.015101,0.098583,-0.050650,-0.607149,-0.116578,-0.105282,-0.059752);
        i0 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, -1), 0);
        i1 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, -1), 0);
        i2 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, -1), 0);
        i3 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, 0), 0);
        i4 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, 0), 0);
        i5 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, 0), 0);
        i6 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, 1), 0);
        i7 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, 1), 0);
        i8 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, 1), 0);
        sum0 += i0 * mat4(-0.076155,0.062556,-0.540193,-0.195430,0.049984,0.088307,-0.529605,0.192280,0.101674,-0.121348,0.221606,0.139492,0.104866,0.251427,-3.183579,-0.019863);
        sum0 += i1 * mat4(-0.349156,-0.432335,0.033183,0.175986,0.090019,-0.274042,0.266543,0.101890,0.102475,-0.387414,0.014983,0.234075,0.260861,-1.499404,0.498830,0.003939);
        sum0 += i2 * mat4(0.345232,-0.101592,-0.328143,0.060317,-0.536533,0.177619,-0.019362,-0.008701,-0.401127,-0.180307,-0.042947,0.021492,0.090322,0.454855,0.004047,0.064455);
        sum0 += i3 * mat4(-0.103172,-0.306720,0.665539,-0.023896,0.103884,0.189060,-0.278249,0.047273,0.098858,0.302351,-0.172952,-0.001803,0.219966,0.077584,0.048661,-0.023120);
        sum0 += i4 * mat4(0.006483,0.001576,0.458717,0.214231,-0.023510,-0.095992,0.158224,0.104888,0.218113,-0.700490,0.339939,-0.232809,-0.127318,-0.337822,0.127833,0.059009);
        sum0 += i5 * mat4(0.050359,-0.428237,0.503580,0.146029,-0.223018,0.116181,-0.156011,0.027686,-0.405479,-0.105363,-0.240024,0.023265,-0.648095,0.045785,0.306249,-0.008020);
        sum0 += i6 * mat4(-0.057294,0.004216,0.132693,-0.130546,-0.026724,0.056857,0.122720,0.083177,-0.108066,0.530039,0.223326,0.001223,0.099612,-0.029590,0.440719,0.056988);
        sum0 += i7 * mat4(0.026681,-0.185391,0.046850,0.076583,0.023349,0.152519,0.049046,0.028918,-0.258188,-0.303573,-0.284907,-0.181574,0.146546,-0.244570,0.225285,-0.031271);
        sum0 += i8 * mat4(-0.020695,0.044390,0.055023,0.032536,-0.065491,-0.024146,0.035239,0.020821,0.095305,0.412437,-0.277214,-0.027776,0.042361,0.177262,0.017479,-0.012099);
        sum1 += i0 * mat4(-0.028495,-0.068262,-0.655322,-0.135846,-0.246587,-0.040980,1.029267,0.507758,0.578828,-0.076105,-2.142297,-0.084519,0.264019,0.273096,-0.377106,-0.114988);
        sum1 += i1 * mat4(0.053310,-0.246752,0.106765,-0.318484,-0.019584,0.041988,-0.601575,-0.141876,0.374410,-1.335218,1.038050,0.042439,0.058901,-2.344080,0.519761,0.134494);
        sum1 += i2 * mat4(-0.343542,-0.092017,-0.049315,-0.208097,0.415919,0.067627,0.501075,0.038104,-0.062881,-0.304355,0.932894,0.060659,0.269899,-0.617005,0.166857,0.070046);
        sum1 += i3 * mat4(-0.061508,-0.127056,0.315372,-0.120212,-0.706477,0.716278,0.124710,0.162060,0.292575,-0.021003,0.414078,-0.234194,0.154364,0.089228,0.216695,-0.017033);
        sum1 += i4 * mat4(0.146304,-0.159126,-0.194502,-0.071946,-0.336137,0.503155,-0.199874,-0.044229,0.408487,-0.026307,-0.023950,-0.115183,0.162889,0.443254,0.240476,0.105390);
        sum1 += i5 * mat4(-0.014627,-0.007522,0.094848,-0.046513,0.253139,0.276502,-0.347338,0.015925,-0.605942,-0.226253,0.588600,-0.063858,-0.952103,-0.070302,0.196558,0.054469);
        sum1 += i6 * mat4(-0.063790,-0.021644,0.039549,-0.139082,-0.414963,0.640510,-0.098269,0.179821,0.209192,-0.047371,-0.002895,-0.123964,-0.015227,-0.429315,-0.664657,0.049100);
        sum1 += i7 * mat4(0.112118,-0.096221,0.068950,-0.126502,-1.091185,-1.128189,-1.034084,0.180318,0.298741,0.920988,0.144341,0.092457,0.615032,2.260427,0.933517,0.197750);
        sum1 += i8 * mat4(-0.028048,0.074114,-0.050716,-0.125478,-0.385325,0.259018,-0.323618,0.184731,-0.049549,0.141019,0.272995,-0.056016,-0.021812,-0.591534,0.113132,0.082434);
        highp uint bufIdx = gl_GlobalInvocationID.y * gl_NumWorkGroups.x * gl_WorkGroupSize.x + gl_GlobalInvocationID.x;
        outFeatures.data[bufIdx][2] = packUnorm4x8(sum0);
        outFeatures.data[bufIdx][3] = packUnorm4x8(sum1);
    }
    )
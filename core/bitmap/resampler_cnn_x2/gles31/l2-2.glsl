/*
    Beatmup image and signal processing library
    Copyright (C) 2020, lnstadrum

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
STRINGIFY(
    uniform sampler2D[3] inFeatures;
    layout(binding = 0, std430) writeonly buffer outFeatures_ { highp uint data[][8]; } outFeatures;
    void main() {
        lowp vec4 i0, i1, i2, i3, i4, i5, i6, i7, i8;
        mediump vec4 sum0 = vec4(-0.771607, 0.024048, 0.015689, -0.587401);
        mediump vec4 sum1 = vec4(-0.015146, -0.281039, -1.355199, 0.204492);
        i0 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, -1), 0);
        i1 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, -1), 0);
        i2 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, -1), 0);
        i3 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, 0), 0);
        i4 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, 0), 0);
        i5 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, 0), 0);
        i6 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, 1), 0);
        i7 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, 1), 0);
        i8 = texelFetch(inFeatures[0], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, 1), 0);
        sum0 += i0 * mat4(0.579588,0.372588,-0.706110,0.695823,0.135461,0.016531,-0.025625,0.753206,-1.389178,-0.168663,0.364421,0.717104,-0.665869,0.080417,0.789274,1.204229);
        sum0 += i1 * mat4(0.947549,-2.859058,0.035478,2.937527,0.418285,-0.048989,0.108977,-1.684644,0.124318,0.094613,0.142296,-1.189758,1.026467,-0.042039,0.396806,-0.536407);
        sum0 += i2 * mat4(0.334109,-1.546571,-0.745573,-0.920159,-0.171006,0.232758,0.039330,-0.435330,-1.487501,0.249936,-0.093080,1.506834,1.172267,0.343856,0.452062,0.940546);
        sum0 += i3 * mat4(-1.240773,0.678431,-0.101235,-0.061241,-0.065056,-0.096069,-0.111671,-0.133162,0.326821,-0.237475,-0.360190,1.951876,0.349161,0.168569,-0.676558,0.998075);
        sum0 += i4 * mat4(-0.093676,-0.142510,1.197643,-2.593762,-0.304033,-0.253093,-0.111212,-0.389254,-0.146902,0.127532,-0.650746,1.223638,-1.580946,0.541351,-0.326560,0.870565);
        sum0 += i5 * mat4(0.431920,0.273713,-0.692725,-0.981026,0.126800,0.230150,0.026611,-0.688974,0.252308,0.085378,0.245755,2.163740,0.794485,0.148584,-0.164557,0.518035);
        sum0 += i6 * mat4(0.014211,-0.048998,0.325616,-0.506733,0.319000,0.291634,-0.125890,-0.127955,-0.483672,-0.020899,-0.158056,0.794007,-0.978201,0.190146,0.069212,1.342467);
        sum0 += i7 * mat4(-0.538072,0.170949,-1.552136,-0.369055,-0.757710,-0.827679,0.160546,0.024493,0.090030,0.138917,-0.278248,1.243908,-1.430849,0.042139,-0.435705,0.828231);
        sum0 += i8 * mat4(0.326588,0.104446,0.389035,-0.017258,0.047187,0.010239,0.050380,0.141288,-0.776078,0.052468,-0.145628,0.184275,0.038480,0.497802,-0.346534,1.764521);
        sum1 += i0 * mat4(0.033974,0.245190,-0.404444,-0.091369,0.054711,0.043510,-0.077761,0.616971,-0.978461,-0.032706,0.349980,-0.189967,-0.093028,-0.016061,-0.052495,-2.378446);
        sum1 += i1 * mat4(-0.026238,-0.019629,-0.127663,0.064189,0.525242,0.016768,0.053551,-0.043961,0.309931,0.311408,-0.192974,0.359289,0.097675,-0.051089,0.076263,0.287388);
        sum1 += i2 * mat4(-0.012283,-0.038981,-0.071269,-1.514324,-0.529440,0.065482,-0.228975,0.014274,0.091740,0.233134,0.701998,0.858188,-0.047975,0.019821,0.110628,-0.157015);
        sum1 += i3 * mat4(-0.313354,0.028401,-0.139813,-0.422107,0.385830,-0.113647,0.252933,0.471015,-0.962445,0.138210,-0.587234,1.637120,0.088953,-0.038336,-0.043657,-0.191940);
        sum1 += i4 * mat4(0.336815,-0.446986,0.049042,-0.204799,-3.376965,-0.175609,0.063242,0.620370,2.309314,-0.998005,-0.846595,-0.227209,-0.226529,-0.003097,-0.121300,0.710270);
        sum1 += i5 * mat4(-0.171216,-0.259049,-0.250945,-0.939014,0.641106,-0.050176,-0.112834,0.414535,-0.688208,0.357358,0.754829,2.143032,-0.011661,0.068062,0.033361,0.256827);
        sum1 += i6 * mat4(0.065492,0.063213,-0.070009,0.027404,-0.022177,-0.821087,0.111993,-0.014657,0.307839,-0.427832,-0.333870,0.643981,0.023787,-0.051944,0.000729,-0.447347);
        sum1 += i7 * mat4(-0.141317,-0.521485,-0.133969,-0.537165,0.130848,-0.288666,0.417496,0.584055,0.424700,-2.115789,0.567501,1.285378,0.008663,0.001516,-0.012036,-1.164026);
        sum1 += i8 * mat4(-0.042628,-0.137238,-0.018379,0.023902,-0.156996,-0.147314,0.005456,-0.294365,-0.272821,0.422789,-0.626043,0.977704,-0.075567,0.044575,-0.068855,0.155902);
        i0 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, -1), 0);
        i1 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, -1), 0);
        i2 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, -1), 0);
        i3 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, 0), 0);
        i4 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, 0), 0);
        i5 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, 0), 0);
        i6 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, 1), 0);
        i7 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, 1), 0);
        i8 = texelFetch(inFeatures[1], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, 1), 0);
        sum0 += i0 * mat4(-0.016622,-0.124329,0.951122,0.255017,0.008366,0.102168,0.118387,0.163014,-0.020491,-0.268702,0.279321,-0.017280,-0.479156,-0.071781,2.125622,-0.047216);
        sum0 += i1 * mat4(-0.289007,-0.706189,-1.241990,-0.105582,-0.019527,-0.141451,-0.514100,-0.122602,-0.052375,0.086252,2.626304,0.491900,-0.652337,-0.877278,1.220634,0.002288);
        sum0 += i2 * mat4(-0.270886,-0.119622,0.084786,0.238761,0.021442,-0.014745,-0.973411,-0.430562,-0.283271,0.050750,2.068123,-0.873715,0.235620,-0.016599,1.717195,0.278790);
        sum0 += i3 * mat4(0.430599,-0.270442,-1.530176,0.260345,0.089072,0.043215,-0.002663,0.905600,-0.350390,0.083823,1.420292,-0.291769,1.190091,-0.279942,0.154405,-0.108965);
        sum0 += i4 * mat4(-0.398354,-0.178394,-0.843756,0.259042,0.100769,-0.085147,1.341888,-0.145827,-0.299380,0.607847,-0.131255,-0.294111,0.956713,-0.156831,0.744523,0.605145);
        sum0 += i5 * mat4(-0.172203,0.266221,3.859740,-0.232144,0.008793,0.001044,-0.202228,-0.836829,0.213655,-0.098060,-1.701448,0.650132,0.274291,0.684395,0.412316,-0.305205);
        sum0 += i6 * mat4(-1.182766,0.404278,0.166622,-0.183401,0.209526,0.065230,0.276529,0.453768,0.556314,-0.396518,0.613176,0.028897,-0.319668,-0.155626,0.981244,-0.515260);
        sum0 += i7 * mat4(-2.491424,-0.201002,-0.282871,-0.351465,0.111859,0.136292,-0.420706,0.286601,0.721114,-0.045065,-0.794815,0.762471,-0.675822,-0.234464,-0.005468,-0.417660);
        sum0 += i8 * mat4(0.185688,0.526589,1.305071,0.022872,0.010464,0.173454,1.174759,-0.419266,-0.836958,-0.390333,-0.643963,-0.548157,-0.473705,0.211952,1.153639,-0.249667);
        sum1 += i0 * mat4(0.093885,-0.025083,0.224515,0.308183,0.098904,-0.083911,-0.179854,0.109231,0.083095,-0.465171,-0.122328,-0.169659,-0.025328,0.060225,-2.579127,0.088383);
        sum1 += i1 * mat4(-0.005233,-0.497392,-0.593733,-0.339171,0.072433,-0.557256,-0.477195,0.212096,0.091750,-2.737981,3.643892,0.541891,-0.056084,0.012654,-0.720513,0.082514);
        sum1 += i2 * mat4(0.209813,-0.172570,-0.379721,0.405456,0.031096,0.000570,0.906523,0.123219,-0.257958,-0.195259,0.504556,0.498993,-0.123652,0.096900,0.005773,0.231996);
        sum1 += i3 * mat4(0.186351,0.028711,-0.427810,-0.528815,0.060663,-0.014395,0.383787,-0.151619,-0.158636,-0.204923,0.539956,0.027310,-0.094577,-0.043024,-0.418174,-0.394765);
        sum1 += i4 * mat4(0.225567,-0.117994,0.503988,0.512397,0.024829,0.405483,0.269000,-0.358385,-0.058623,0.683059,0.219042,0.317174,-0.037274,0.060620,-0.658026,0.050342);
        sum1 += i5 * mat4(0.000670,0.196393,0.660099,-0.484576,0.213829,0.294862,-1.033594,0.386309,0.263677,0.119769,0.289741,0.256094,0.051773,0.000310,0.034676,-0.363589);
        sum1 += i6 * mat4(-0.011165,0.075944,-0.009272,0.204561,-0.137273,0.004816,-0.118825,-0.196990,0.231127,-0.462172,0.524401,0.161670,0.003615,-0.124477,-1.110507,0.022343);
        sum1 += i7 * mat4(0.111045,0.245668,-0.383383,-0.246200,0.353263,0.014411,-0.132673,0.098617,-0.306048,0.486331,0.462698,-0.062505,0.260519,0.006788,-0.962626,-0.290436);
        sum1 += i8 * mat4(-0.362642,0.047841,0.021136,0.226307,-0.349821,0.106557,0.104419,0.204334,-1.518130,-0.617286,-0.300019,0.281653,-0.271250,-0.204238,-1.318795,0.028482);
        i0 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, -1), 0);
        i1 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, -1), 0);
        i2 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, -1), 0);
        i3 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, 0), 0);
        i4 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, 0), 0);
        i5 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, 0), 0);
        i6 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(-1, 1), 0);
        i7 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(0, 1), 0);
        i8 = texelFetch(inFeatures[2], ivec2(gl_GlobalInvocationID.xy) + ivec2(1, 1), 0);
        sum0 += i0 * mat4(-0.163214,-0.182927,0.263731,0.612764,-0.050826,0.073326,-0.061709,0.460603,0.265043,0.186447,-0.105360,0.109241,-1.483502,0.403235,-0.185508,0.618627);
        sum0 += i1 * mat4(0.464158,-0.458196,-0.087655,0.261427,-0.105961,0.082762,0.080994,0.078538,-0.149014,-0.090035,0.325735,-0.471766,0.085650,0.220818,-0.116694,-0.156378);
        sum0 += i2 * mat4(-0.604999,-0.469764,0.295797,0.374949,-0.456616,0.035687,-0.034262,-0.020482,-0.321282,0.074659,-0.100532,0.338679,0.497035,-0.374294,0.182427,-0.430601);
        sum0 += i3 * mat4(1.206075,-1.330051,0.948374,0.292929,-0.084793,0.016911,0.071907,-2.126406,-0.383621,0.148097,-0.492441,1.119089,0.119675,-1.208276,0.088091,0.067649);
        sum0 += i4 * mat4(-0.031728,-0.179383,-0.882243,0.321814,0.370678,0.152308,-0.079566,0.170582,0.103152,0.219995,0.395472,0.624804,0.478907,-0.616944,-0.371050,-0.140479);
        sum0 += i5 * mat4(0.056183,-0.433396,0.604471,0.749184,0.262505,0.037632,-0.072423,0.059014,0.140638,-0.104293,-0.171516,-1.109769,-0.416793,0.671435,0.781190,-0.057597);
        sum0 += i6 * mat4(0.033960,1.462344,0.175155,0.470529,-0.091115,-0.129305,-0.292353,-0.330444,0.179172,-0.313095,0.075942,0.070839,0.209109,0.241034,-0.074777,-0.084283);
        sum0 += i7 * mat4(-0.256919,1.089843,0.472038,0.145060,-0.239481,-0.193307,-0.116693,0.211716,0.068914,-0.296322,0.300183,-0.332776,-0.413368,0.092833,0.273235,-0.886564);
        sum0 += i8 * mat4(-0.706433,0.122400,-0.095946,0.200112,0.536961,0.058746,-0.205012,-0.051760,0.071523,0.327425,0.253134,0.147992,-0.498374,0.773661,0.643460,-0.630860);
        sum1 += i0 * mat4(0.291669,0.019684,0.183924,-0.651381,0.145451,0.127968,0.042671,-0.580683,0.169408,0.227782,-0.026941,-0.702065,0.058688,0.003020,-0.055082,0.108051);
        sum1 += i1 * mat4(-0.235252,0.344692,0.033556,0.195459,0.110724,0.052639,0.097149,-0.196819,0.417764,0.043582,0.421824,0.038123,-0.509562,0.026964,0.074449,-0.293807);
        sum1 += i2 * mat4(-0.044602,0.057731,0.233951,-0.045753,0.313471,-0.005683,0.103050,0.117446,0.315079,0.449748,-0.112028,-0.213138,-0.557436,0.071890,-0.010701,-0.081537);
        sum1 += i3 * mat4(-0.116595,-0.015294,0.108833,0.200384,0.268524,-0.033830,-0.112181,0.349587,-0.347605,0.238696,-0.581730,-0.979097,0.325813,-0.034075,0.175124,-0.225978);
        sum1 += i4 * mat4(0.278472,0.077483,-0.138303,-0.407800,-0.002115,0.034196,0.057253,-0.458893,0.142888,0.156151,0.726974,0.387326,-0.400246,-0.022838,0.174485,-0.348892);
        sum1 += i5 * mat4(-0.559376,0.097947,0.064373,0.764919,-0.482138,-0.028391,0.187244,-0.015198,-0.141799,0.192517,-0.458444,-0.059600,1.470899,0.076968,-0.033350,-0.259984);
        sum1 += i6 * mat4(0.171447,0.044795,0.075997,-0.538543,0.181310,-0.044436,0.097428,-0.582650,0.153802,-0.254893,-0.199618,-0.815049,0.073156,-0.004209,0.084033,-0.131308);
        sum1 += i7 * mat4(-0.030942,0.042143,0.158506,-0.151996,0.240200,-0.534690,0.170336,-0.319163,0.360897,0.333875,0.433466,-0.116325,-0.326567,-0.344375,0.010590,-0.445494);
        sum1 += i8 * mat4(0.361482,0.127710,-0.001661,-0.015898,-0.214482,0.287105,0.373876,-0.062658,0.278547,-0.771508,-0.168567,-0.233364,-0.220849,0.097423,0.005655,-0.069675);
        highp uint bufIdx = gl_GlobalInvocationID.y * gl_NumWorkGroups.x * gl_WorkGroupSize.x + gl_GlobalInvocationID.x;
        outFeatures.data[bufIdx][4] = packUnorm4x8(sum0);
        outFeatures.data[bufIdx][5] = packUnorm4x8(sum1);
    }
    )
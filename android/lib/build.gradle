apply plugin: 'com.android.library'

android {
    compileSdk 33
    ndkVersion = "23.0.7599858"

    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 33

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

		externalNativeBuild {
            cmake {
                arguments "-DANDROID_ARM_NEON=TRUE", "-DANDROID_STL=c++_shared", "-DANDROID_CPP_FEATURES=exceptions"
                cppFlags.addAll(["-std=c++11", "-fexceptions", "-fvisibility=hidden", "-ffunction-sections", "-fdata-sections",
                                 "-Wl,--gc-sections", "-Os", "-fno-rtti"])
                abiFilters.addAll(["arm64-v8a", "armeabi-v7a", "x86", "x86_64"])
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            externalNativeBuild {
                cmake {
                    cFlags.add("-DBEATMUP_DEBUG -g")
                    cppFlags.add("-DBEATMUP_DEBUG -g")
                }
            }
        }
		
        release {
            minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
			externalNativeBuild {
                cmake {
                    cppFlags.addAll(["-O3", "-s"])
                }
            }
        }
    }

    flavorDimensions += "version"

    productFlavors {
        full {
            dimension "version"
            externalNativeBuild {
                cmake {
                    arguments.addAll(["-DPROFILE_NNETS=true", "-DPROFILE_AUDIO=true"])
                }
            }
        }

        imaging {
            dimension "version"
            externalNativeBuild {
                cmake {
                    arguments.addAll(["-DPROFILE_NNETS=true", "-DPROFILE_AUDIO=false"])
                }
            }
        }

        audio {
            dimension "version"
            externalNativeBuild {
                cmake {
                    arguments.add("-DPROFILE_AUDIO=true")
                }
            }
        }
    }

    externalNativeBuild {
        cmake {
            path 'src/main/cpp/CMakeLists.txt'
        }
    }
    packagingOptions {
        jniLibs {
            pickFirsts += ['**/*.so']
        }
    }

    namespace 'xyz.beatmup'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
}
